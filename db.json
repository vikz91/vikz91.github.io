{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/Chan/source/PhotoSwipe/photoswipe-ui-default.js","path":"PhotoSwipe/photoswipe-ui-default.js","modified":1,"renderable":1},{"_id":"themes/Chan/source/PhotoSwipe/photoswipe-ui-default.min.js","path":"PhotoSwipe/photoswipe-ui-default.min.js","modified":1,"renderable":1},{"_id":"themes/Chan/source/PhotoSwipe/photoswipe.css","path":"PhotoSwipe/photoswipe.css","modified":1,"renderable":1},{"_id":"themes/Chan/source/PhotoSwipe/photoswipe.min.js","path":"PhotoSwipe/photoswipe.min.js","modified":1,"renderable":1},{"_id":"themes/Chan/source/scripts/main.js","path":"scripts/main.js","modified":1,"renderable":1},{"_id":"themes/Chan/source/styles/archive.styl","path":"styles/archive.styl","modified":1,"renderable":1},{"_id":"themes/Chan/source/styles/article.styl","path":"styles/article.styl","modified":1,"renderable":1},{"_id":"themes/Chan/source/styles/footer.styl","path":"styles/footer.styl","modified":1,"renderable":1},{"_id":"themes/Chan/source/styles/highlight.styl","path":"styles/highlight.styl","modified":1,"renderable":1},{"_id":"themes/Chan/source/styles/layout.styl","path":"styles/layout.styl","modified":1,"renderable":1},{"_id":"themes/Chan/source/styles/main.styl","path":"styles/main.styl","modified":1,"renderable":1},{"_id":"themes/Chan/source/styles/mobile-header.styl","path":"styles/mobile-header.styl","modified":1,"renderable":1},{"_id":"themes/Chan/source/styles/monochrome.styl","path":"styles/monochrome.styl","modified":1,"renderable":1},{"_id":"themes/Chan/source/styles/pagination.styl","path":"styles/pagination.styl","modified":1,"renderable":1},{"_id":"themes/Chan/source/styles/post-list.styl","path":"styles/post-list.styl","modified":1,"renderable":1},{"_id":"themes/Chan/source/styles/sidebar.styl","path":"styles/sidebar.styl","modified":1,"renderable":1},{"_id":"themes/Chan/source/styles/third-party.styl","path":"styles/third-party.styl","modified":1,"renderable":1},{"_id":"themes/Chan/source/styles/variables.styl","path":"styles/variables.styl","modified":1,"renderable":1},{"_id":"themes/Chan/source/PhotoSwipe/photoswipe.js","path":"PhotoSwipe/photoswipe.js","modified":1,"renderable":1},{"_id":"themes/Chan/source/PhotoSwipe/default-skin/default-skin.css","path":"PhotoSwipe/default-skin/default-skin.css","modified":1,"renderable":1},{"_id":"themes/Chan/source/PhotoSwipe/default-skin/default-skin.png","path":"PhotoSwipe/default-skin/default-skin.png","modified":1,"renderable":1},{"_id":"themes/Chan/source/PhotoSwipe/default-skin/default-skin.svg","path":"PhotoSwipe/default-skin/default-skin.svg","modified":1,"renderable":1},{"_id":"themes/Chan/source/PhotoSwipe/default-skin/preloader.gif","path":"PhotoSwipe/default-skin/preloader.gif","modified":1,"renderable":1},{"_id":"themes/Chan/source/images/cc/by.png","path":"images/cc/by.png","modified":1,"renderable":1},{"_id":"themes/Chan/source/images/cc/cc.png","path":"images/cc/cc.png","modified":1,"renderable":1},{"_id":"themes/Chan/source/images/cc/nc.png","path":"images/cc/nc.png","modified":1,"renderable":1},{"_id":"themes/Chan/source/images/cc/nd.png","path":"images/cc/nd.png","modified":1,"renderable":1},{"_id":"themes/Chan/source/images/cc/sa.png","path":"images/cc/sa.png","modified":1,"renderable":1},{"_id":"themes/Chan/source/perfect-scrollbar/css/perfect-scrollbar.css","path":"perfect-scrollbar/css/perfect-scrollbar.css","modified":1,"renderable":1},{"_id":"themes/Chan/source/perfect-scrollbar/css/perfect-scrollbar.min.css","path":"perfect-scrollbar/css/perfect-scrollbar.min.css","modified":1,"renderable":1},{"_id":"themes/Chan/source/perfect-scrollbar/js/perfect-scrollbar.jquery.js","path":"perfect-scrollbar/js/perfect-scrollbar.jquery.js","modified":1,"renderable":1},{"_id":"themes/Chan/source/perfect-scrollbar/js/perfect-scrollbar.js","path":"perfect-scrollbar/js/perfect-scrollbar.js","modified":1,"renderable":1},{"_id":"themes/Chan/source/styles/libs/normalize.styl","path":"styles/libs/normalize.styl","modified":1,"renderable":1},{"_id":"themes/Chan/source/perfect-scrollbar/js/min/perfect-scrollbar.jquery.min.js","path":"perfect-scrollbar/js/min/perfect-scrollbar.jquery.min.js","modified":1,"renderable":1},{"_id":"themes/Chan/source/perfect-scrollbar/js/min/perfect-scrollbar.min.js","path":"perfect-scrollbar/js/min/perfect-scrollbar.min.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"6974ddb0953597b845d10c3aec9016f9ed161fbb","modified":1484118288000},{"_id":"themes/Chan/.git","hash":"9fd798e5566fc6eeb86fe259bce9e902a635b2b8","modified":1483905889000},{"_id":"themes/Chan/.gitignore","hash":"3ca0e72fdfd533e411cc95dc9c91c5ec59661f95","modified":1483905889000},{"_id":"themes/Chan/LICENSE","hash":"016e04350831182d3b1fdf08212a3292634a6dbb","modified":1483905889000},{"_id":"themes/Chan/README.md","hash":"520507fcb88d13e9d808eccf7ca6797270c02563","modified":1483905889000},{"_id":"themes/Chan/_config.yml","hash":"0756faaf6c70394b71c3433c64b6bb3b47a49c6b","modified":1483905889000},{"_id":"themes/Chan/cc.png","hash":"eb4f6de9697f43e2c59ae358c25b7a4c92a17798","modified":1483905889000},{"_id":"themes/Chan/package.json","hash":"16257778371b5907e39533d6e1a48cd40800434c","modified":1483905889000},{"_id":"themes/Chan/screenshot.png","hash":"d7de078723b6b2089949637a1ced3481e192d15a","modified":1483905889000},{"_id":"source/_posts/Effective-Unity-Folder-Structure.md","hash":"42b9f6f097b371574e5476baf072e08bc37cfe9b","modified":1484118576000},{"_id":"source/_posts/Game-Flow-Design-for-mobiles.md","hash":"5387a911d761cbd05b12a40140bef53dfb9022d5","modified":1484161393000},{"_id":"source/_posts/GameDevStream-–-01-Catch-The-Egg.md","hash":"0844f8e3386d67beb52b96a9c3dece06cf24c6e9","modified":1484162805000},{"_id":"source/_posts/How-to-have-a-Career-as-a-Game-Developer.md","hash":"894a05837ac16c05119c1536b3a0c283f7faef92","modified":1483915278000},{"_id":"source/_posts/Lifesaver-tools-and-scripts.md","hash":"042bdf4663323d3196561e77fd764c0d3234cceb","modified":1484159989000},{"_id":"source/_posts/Move-a-GameObject-relative-to-its-facing-direction-in-Unity.md","hash":"da49bcf83785c7e58b018a26057b5df5101e77c0","modified":1483915279000},{"_id":"source/_posts/Why-work-in-Game-Industry-when-IT-companies-pay-better.md","hash":"72ec35547c1d2db6d97f498f12032a9bc6903724","modified":1483915276000},{"_id":"source/_posts/hello-world.md","hash":"8a02477044e2b77f1b262da2c48c01429e4a32e4","modified":1483880087000},{"_id":"source/_posts/unity-Utility-Library-for-Unity-3D.md","hash":"e8f0b5c959e9137921da6391289e0429e8d2c6f6","modified":1484160993000},{"_id":"themes/Chan/languages/en.yml","hash":"ff056ed739309f416292809963ffd814ebb0046d","modified":1483905889000},{"_id":"themes/Chan/languages/zh-CN.yml","hash":"7a07cdf3017ac6de172d0cbf701bfdf28e237440","modified":1483905889000},{"_id":"themes/Chan/languages/zh-TW.yml","hash":"d5735a77524d95df8fbf83b60fea11462e0e3ac4","modified":1483905889000},{"_id":"themes/Chan/layout/archive.ejs","hash":"4246f424f472f7f93f6a88335946fd50d2852f93","modified":1483905889000},{"_id":"themes/Chan/layout/category.ejs","hash":"94a70f68fbdf7f034630c5fb74b48379b4b6fbe8","modified":1483905889000},{"_id":"themes/Chan/layout/index.ejs","hash":"4246f424f472f7f93f6a88335946fd50d2852f93","modified":1483905889000},{"_id":"themes/Chan/layout/layout.ejs","hash":"b688becfbb667d4cfea10d9db1ae7d4377fa86e2","modified":1483905889000},{"_id":"themes/Chan/layout/post.ejs","hash":"ab1195b02ca5b46e85be889bf61f69a416797256","modified":1483905889000},{"_id":"themes/Chan/layout/tag.ejs","hash":"ba57de56c466135e7af2b9104167a6d35a11dbfc","modified":1483905889000},{"_id":"themes/Chan/scripts/photoswipe.js","hash":"4632b28f58f661716a0633b556a55c05b49326a3","modified":1483905889000},{"_id":"themes/Chan/screenshot.gif","hash":"fe433effcca8c245e7ea4c5da09521659fe15592","modified":1483905889000},{"_id":"source/_posts/Effective-Unity-Folder-Structure/Unity3d-Folder-Structure.png","hash":"2eaa7299fe1728d958e7218f98a80cfcb288b2f6","modified":1484118257000},{"_id":"source/_posts/Game-Flow-Design-for-mobiles/What-a-Drag-Diagrams.jpg","hash":"7b04166581d57a77ecdb114c05997ec1cda7804d","modified":1484161077000},{"_id":"themes/Chan/layout/_partials/article.ejs","hash":"d8c45608463740ec3b994cea5fd204a3fef15f64","modified":1483905889000},{"_id":"themes/Chan/layout/_partials/baidu-statistics.ejs","hash":"8259fd61da7243306104eb57c817d93393000c88","modified":1483905889000},{"_id":"themes/Chan/layout/_partials/footer.ejs","hash":"015e10a152a216c33798b62ee446159c94efaa1f","modified":1483905889000},{"_id":"themes/Chan/layout/_partials/google-analytics.ejs","hash":"670da0c3a848325c564bc481add948538388b919","modified":1483905889000},{"_id":"themes/Chan/layout/_partials/head.ejs","hash":"16588883a53e7a4ac4124d54c29764febc2b97d8","modified":1483905889000},{"_id":"themes/Chan/layout/_partials/mobile-header.ejs","hash":"81f18bc01bc23ae3077115a62cbc7922ecab3910","modified":1483905889000},{"_id":"themes/Chan/layout/_partials/pagination.ejs","hash":"3439257af42205e46f024619811e86636b4f8a8c","modified":1483905889000},{"_id":"themes/Chan/layout/_partials/photoswipe.ejs","hash":"881109633b8b3bd1bf98ed69e2bda916cc1d5422","modified":1483905889000},{"_id":"themes/Chan/layout/_partials/post-list.ejs","hash":"9c38cea0a45d4a884fb7a461ccc5803502b5c222","modified":1483905889000},{"_id":"themes/Chan/layout/_partials/scripts.ejs","hash":"74a587eaf39ed0a4f784ac9941da30fcbaa85918","modified":1483905889000},{"_id":"themes/Chan/layout/_partials/sidebar.ejs","hash":"d4e7a4ccc04decdab757cdc8d16041728c50695e","modified":1483905889000},{"_id":"themes/Chan/source/PhotoSwipe/photoswipe-ui-default.js","hash":"724162c14e5722a2ce1f44cf086dcea7b6855b80","modified":1483905889000},{"_id":"themes/Chan/source/PhotoSwipe/photoswipe-ui-default.min.js","hash":"38557bef17c33e172bc8e1670cd302d91622dfad","modified":1483905889000},{"_id":"themes/Chan/source/PhotoSwipe/photoswipe.css","hash":"309be6861bc1384fbc016110bb083de648505fe4","modified":1483905889000},{"_id":"themes/Chan/source/PhotoSwipe/photoswipe.min.js","hash":"e3267f5ae23f00c1ae052d019f12787296e34afc","modified":1483905889000},{"_id":"themes/Chan/source/scripts/main.js","hash":"7bf49377a68ad7579e25e4b11edcfadef33c6f82","modified":1483905889000},{"_id":"themes/Chan/source/styles/archive.styl","hash":"f80263048bc15e95e080e648b3db4dae96fbf8d8","modified":1483905889000},{"_id":"themes/Chan/source/styles/article.styl","hash":"947bac30fa4c4d8a92e0738e8188d5c294ca9054","modified":1483905889000},{"_id":"themes/Chan/source/styles/footer.styl","hash":"77333fa5ccd823bb3513b34d4a38f0f4d849ce99","modified":1483905889000},{"_id":"themes/Chan/source/styles/highlight.styl","hash":"b3a10c1a565ceeb6f33e0b0992b99b91c6e8f963","modified":1483905889000},{"_id":"themes/Chan/source/styles/layout.styl","hash":"35570f3d4f16d1f43c2bb3b0b79cba8456d72531","modified":1483905889000},{"_id":"themes/Chan/source/styles/main.styl","hash":"e48ed4bb3bd5b26915d84594d032ab1f4aacdb9e","modified":1483905889000},{"_id":"themes/Chan/source/styles/mobile-header.styl","hash":"13887d8dec38ee4b0dd50691734e9688c5886222","modified":1483905889000},{"_id":"themes/Chan/source/styles/monochrome.styl","hash":"f5fba2261c289f75c45c2bd4bf7e8af1f3af736f","modified":1483905889000},{"_id":"themes/Chan/source/styles/pagination.styl","hash":"f16a40d927b8e2228b502cbdc83725b298b257e4","modified":1483905889000},{"_id":"themes/Chan/source/styles/post-list.styl","hash":"c2b3898d76a5fde351b73cbedccb7b9b8da88682","modified":1483905889000},{"_id":"themes/Chan/source/styles/sidebar.styl","hash":"5e9f9c594ebb26f0a4816ac253ffb07e796421fb","modified":1483905889000},{"_id":"themes/Chan/source/styles/third-party.styl","hash":"d07ebecfcfb975996e32507d116a6ce5ac14fd48","modified":1483905889000},{"_id":"themes/Chan/source/styles/variables.styl","hash":"dac6ff5e31cb53fbef98ee618cf3c358a30fea69","modified":1483905889000},{"_id":"themes/Chan/source/PhotoSwipe/photoswipe.js","hash":"ff9e3cc58b44a61144a9e211503755b170c24e91","modified":1483905889000},{"_id":"themes/Chan/layout/_partials/post/category.ejs","hash":"0dd312b49bcb5638e262d5f0d36da3281c599586","modified":1483905889000},{"_id":"themes/Chan/layout/_partials/post/cc.ejs","hash":"2364f1c6215f0feac1dd959658f4523fe41982e2","modified":1483905889000},{"_id":"themes/Chan/layout/_partials/post/date.ejs","hash":"f4a2dc30040b8218e08d66a55ddf58ef4d343cc1","modified":1483905889000},{"_id":"themes/Chan/layout/_partials/post/disqus.ejs","hash":"337e35c5696f1b868a918bc34244f929a1b895e6","modified":1483905889000},{"_id":"themes/Chan/layout/_partials/post/duoshuo.ejs","hash":"8a1757bf346799daf265997fb5a6427159e65dcb","modified":1483905889000},{"_id":"themes/Chan/layout/_partials/post/gallery.ejs","hash":"01341c85be08a7fbbaf1555289addcb246190439","modified":1483905889000},{"_id":"themes/Chan/layout/_partials/post/jiathis.ejs","hash":"c6d24ca951722c62a64a3e8d2be8ad77dabae169","modified":1483905889000},{"_id":"themes/Chan/layout/_partials/post/tag.ejs","hash":"91d25a73e4a7bc17da5d575f5a37ee2cc4544cbe","modified":1483905889000},{"_id":"themes/Chan/layout/_partials/post/title.ejs","hash":"bd3ccb7d046d7c843dddc5e74d839b3792f6beaf","modified":1483905889000},{"_id":"themes/Chan/source/PhotoSwipe/default-skin/default-skin.css","hash":"91f44576a5f5ccff4740ff5020656bd2f00ca13c","modified":1483905889000},{"_id":"themes/Chan/source/PhotoSwipe/default-skin/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1483905889000},{"_id":"themes/Chan/source/PhotoSwipe/default-skin/default-skin.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1483905889000},{"_id":"themes/Chan/source/PhotoSwipe/default-skin/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1483905889000},{"_id":"themes/Chan/source/images/cc/by.png","hash":"fefd720ccfcfbc2b7b15fa56b0ff7e347855aeef","modified":1483905889000},{"_id":"themes/Chan/source/images/cc/cc.png","hash":"f7b3311d99cf99c94a8d4e7fdfe3708988fa20eb","modified":1483905889000},{"_id":"themes/Chan/source/images/cc/nc.png","hash":"93e68e51a4416092c5b2a313da706caf68113c64","modified":1483905889000},{"_id":"themes/Chan/source/images/cc/nd.png","hash":"255699dc771a311b4f3646b88f9c3089420429ca","modified":1483905889000},{"_id":"themes/Chan/source/images/cc/sa.png","hash":"917c361ce9ee4b8d88c5b22c2b775eff7d25e92e","modified":1483905889000},{"_id":"themes/Chan/source/perfect-scrollbar/css/perfect-scrollbar.css","hash":"3839383a67dbff2cf1efab60cc08b70517eda4fc","modified":1483905889000},{"_id":"themes/Chan/source/perfect-scrollbar/css/perfect-scrollbar.min.css","hash":"d27d8a642a0cf0377d9abdd08858fae9a0fed6e8","modified":1483905889000},{"_id":"themes/Chan/source/perfect-scrollbar/js/perfect-scrollbar.jquery.js","hash":"6c648a786548d8ec9f4879d23095ce501e850350","modified":1483905889000},{"_id":"themes/Chan/source/perfect-scrollbar/js/perfect-scrollbar.js","hash":"18a4fd1e09cac9aa351131a38c59b4dba78be084","modified":1483905889000},{"_id":"themes/Chan/source/styles/libs/normalize.styl","hash":"e58275a588bb631a37a2988145eea231ed23176b","modified":1483905889000},{"_id":"themes/Chan/source/perfect-scrollbar/js/min/perfect-scrollbar.jquery.min.js","hash":"de9735bbe28f4999e3e83698720b4989f80143a0","modified":1483905889000},{"_id":"themes/Chan/source/perfect-scrollbar/js/min/perfect-scrollbar.min.js","hash":"9e33e23e57821cb4763c0cb4fb3b6870b3de11eb","modified":1483905889000},{"_id":"source/_drafts/hello-world.md","hash":"53900edd89d2ea11e39eee09afad00665515c818","modified":1484162379000},{"_id":"source/_discarded/ameDevStream-–-01-Catch-The-Egg.md","hash":"fd227dc9f266d55630bc9d07953c672df71bef3e","modified":1484162556000},{"_id":"source/_discarded/hello-world.md","hash":"53900edd89d2ea11e39eee09afad00665515c818","modified":1484162571000},{"_id":"source/_drafts/GameDevStream-–-01-Catch-The-Egg.md","hash":"0844f8e3386d67beb52b96a9c3dece06cf24c6e9","modified":1484162801000}],"Category":[{"name":"Game Development","_id":"cixtbxhuj0002tavzicjszn7a"}],"Data":[],"Page":[],"Post":[{"title":"Effective Unity Folder Structure ","date":"2014-07-28T06:55:35.000Z","_content":"\n# Effective Unity Folder Structure\n\nThere are many types of structures, being used by so many people. Some are categorize by file types, some by tags, and some by the relations. However, I found the following folder structure to be very efficient.\nI have come across many blogs and studies their folder structures and what I found best for me was the following one. This is a lighltly edited version of what you will get at : [http://www.glenstevens.ca/unity3d-best-practices/](http://www.glenstevens.ca/unity3d-best-practices/)\n\n\n![](/2014/07/28/Effective-Unity-Folder-Structure/Unity3d-Folder-Structure.png)","source":"_posts/Effective-Unity-Folder-Structure.md","raw":"---\ntitle: 'Effective Unity Folder Structure '\ndate: 2014-07-28 12:25:35\ntags:\n- Folder Structure\n- Game Workflow\n- Unity\n- Abhishek\ncategory: Game Development\n---\n\n# Effective Unity Folder Structure\n\nThere are many types of structures, being used by so many people. Some are categorize by file types, some by tags, and some by the relations. However, I found the following folder structure to be very efficient.\nI have come across many blogs and studies their folder structures and what I found best for me was the following one. This is a lighltly edited version of what you will get at : [http://www.glenstevens.ca/unity3d-best-practices/](http://www.glenstevens.ca/unity3d-best-practices/)\n\n\n![](/2014/07/28/Effective-Unity-Folder-Structure/Unity3d-Folder-Structure.png)","slug":"Effective-Unity-Folder-Structure","published":1,"updated":"2017-01-11T07:09:36.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cixtbxhub0000tavz9tksadey","content":"<h1 id=\"Effective-Unity-Folder-Structure\"><a href=\"#Effective-Unity-Folder-Structure\" class=\"headerlink\" title=\"Effective Unity Folder Structure\"></a>Effective Unity Folder Structure</h1><p>There are many types of structures, being used by so many people. Some are categorize by file types, some by tags, and some by the relations. However, I found the following folder structure to be very efficient.<br>I have come across many blogs and studies their folder structures and what I found best for me was the following one. This is a lighltly edited version of what you will get at : <a href=\"http://www.glenstevens.ca/unity3d-best-practices/\" target=\"_blank\" rel=\"external\">http://www.glenstevens.ca/unity3d-best-practices/</a></p>\n<p><img src=\"/2014/07/28/Effective-Unity-Folder-Structure/Unity3d-Folder-Structure.png\" alt=\"\"></p>\n","excerpt":"","more":"<h1 id=\"Effective-Unity-Folder-Structure\"><a href=\"#Effective-Unity-Folder-Structure\" class=\"headerlink\" title=\"Effective Unity Folder Structure\"></a>Effective Unity Folder Structure</h1><p>There are many types of structures, being used by so many people. Some are categorize by file types, some by tags, and some by the relations. However, I found the following folder structure to be very efficient.<br>I have come across many blogs and studies their folder structures and what I found best for me was the following one. This is a lighltly edited version of what you will get at : <a href=\"http://www.glenstevens.ca/unity3d-best-practices/\">http://www.glenstevens.ca/unity3d-best-practices/</a></p>\n<p><img src=\"/2014/07/28/Effective-Unity-Folder-Structure/Unity3d-Folder-Structure.png\" alt=\"\"></p>\n"},{"title":"Game Flow Design for mobiles","date":"2015-02-16T18:57:51.000Z","_content":"\n\n# Game Flow Design for mobiles\n\nRecently while making one of my games,  my team felt the need to have a standardized game Flow Diagram so that every one in the team clearly understands how the game progression works, and which screens comes after which one. \n\n## Game flow? for mobiles?\n\nSo, I [stumbled upon this](http://tinypic.com/view.php?pic=2087ac3&s=5#.WHaAvLZ95Z2), and modified it to my own needs and here it is. For mobile devices, Social Leaderboard and IAP are greatly used.\n\n![](/2015/02/17/Game-Flow-Design-for-mobiles/What-a-Drag-Diagrams.jpg)\n\n\n## How does it work?\n\n1. User taps/clicks the game icon from the app drawer.\n2. Game Launches with a splash screen, showing the company logo and other frameworks / Libraries used ( if permissible). The Intro Splash screen must not retain more than 3 secs, and should fade to either white, or black.\n3. If an initial Loading screen is intended (which is recommended), The graphics used should be minimal and should to add to the overhead. It can also display Tips and/or News.\n4. The Main Menu should be very attractive to give its FIRST IMPRESSION. Do NOT over do the Main Menu, also, try to avoid bluntness. It is the centralized Menu, which will take the user to all the other screens,a nd even QUIT the game too.\n5. Social Leaderboard, IAP and Missions are the “minimum and must have” features of a mobile game nowdays. If you are dreaming of earning through Ads alone, then good luck keep on dreaming!\n6. For mobile device, Settings Popup should atleast – sound toggles, Reset Score, Vibration Toggle, etc.\n7. About Popup must contain a brief intro about the game, and should clearly mention the goal of the game and the alternative links. Also, this is a very good place for embedding Credits.\n8. Technically, you can give as many Game Modes as you wish. But do take note that you should also provide an Interactive Tutorial for each.\n9. A Briefing Page us what tells the players about the goals and missions of the level he is going to play. For e.g. Score Bonuses and Unlocks, Friendly Challenges, etc.\n10. Action is where the actual game takes place. One tip of advice – NEVER, EVER, EVER put advertisements on the main game scene. Gamers will hate it and will be frustrated.\n11. Game Flow Design lets us investigate the flow of all the screens .\n12. Both Action and the interactive tutorial should have Pause Buttons.\n13. A Pause Popup should allow the game to navigate to Main Menu or, resume back to the ongoing game.\n14. Debriefing Popup should inform the user if he/she won or lose. Score calculation happens at these stage and all the bonus unlocks should be displayed here. On of the critical responsibilities of a game designers is to let the gamer feel paradise after winning a game. Rewards, and exclusive REWARDS. Remember, Most players play games for appreciations, even virtual ones.","source":"_posts/Game-Flow-Design-for-mobiles.md","raw":"---\ntitle: Game Flow Design for mobiles\ndate: 2015-02-17 00:27:51\ntags:\n- Architecture\n- Game Flow Diagram\n- Mobile Workflow\ncategory: Game Development\n---\n\n\n# Game Flow Design for mobiles\n\nRecently while making one of my games,  my team felt the need to have a standardized game Flow Diagram so that every one in the team clearly understands how the game progression works, and which screens comes after which one. \n\n## Game flow? for mobiles?\n\nSo, I [stumbled upon this](http://tinypic.com/view.php?pic=2087ac3&s=5#.WHaAvLZ95Z2), and modified it to my own needs and here it is. For mobile devices, Social Leaderboard and IAP are greatly used.\n\n![](/2015/02/17/Game-Flow-Design-for-mobiles/What-a-Drag-Diagrams.jpg)\n\n\n## How does it work?\n\n1. User taps/clicks the game icon from the app drawer.\n2. Game Launches with a splash screen, showing the company logo and other frameworks / Libraries used ( if permissible). The Intro Splash screen must not retain more than 3 secs, and should fade to either white, or black.\n3. If an initial Loading screen is intended (which is recommended), The graphics used should be minimal and should to add to the overhead. It can also display Tips and/or News.\n4. The Main Menu should be very attractive to give its FIRST IMPRESSION. Do NOT over do the Main Menu, also, try to avoid bluntness. It is the centralized Menu, which will take the user to all the other screens,a nd even QUIT the game too.\n5. Social Leaderboard, IAP and Missions are the “minimum and must have” features of a mobile game nowdays. If you are dreaming of earning through Ads alone, then good luck keep on dreaming!\n6. For mobile device, Settings Popup should atleast – sound toggles, Reset Score, Vibration Toggle, etc.\n7. About Popup must contain a brief intro about the game, and should clearly mention the goal of the game and the alternative links. Also, this is a very good place for embedding Credits.\n8. Technically, you can give as many Game Modes as you wish. But do take note that you should also provide an Interactive Tutorial for each.\n9. A Briefing Page us what tells the players about the goals and missions of the level he is going to play. For e.g. Score Bonuses and Unlocks, Friendly Challenges, etc.\n10. Action is where the actual game takes place. One tip of advice – NEVER, EVER, EVER put advertisements on the main game scene. Gamers will hate it and will be frustrated.\n11. Game Flow Design lets us investigate the flow of all the screens .\n12. Both Action and the interactive tutorial should have Pause Buttons.\n13. A Pause Popup should allow the game to navigate to Main Menu or, resume back to the ongoing game.\n14. Debriefing Popup should inform the user if he/she won or lose. Score calculation happens at these stage and all the bonus unlocks should be displayed here. On of the critical responsibilities of a game designers is to let the gamer feel paradise after winning a game. Rewards, and exclusive REWARDS. Remember, Most players play games for appreciations, even virtual ones.","slug":"Game-Flow-Design-for-mobiles","published":1,"updated":"2017-01-11T19:03:13.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cixtbxhuf0001tavz6omiwalo","content":"<h1 id=\"Game-Flow-Design-for-mobiles\"><a href=\"#Game-Flow-Design-for-mobiles\" class=\"headerlink\" title=\"Game Flow Design for mobiles\"></a>Game Flow Design for mobiles</h1><p>Recently while making one of my games,  my team felt the need to have a standardized game Flow Diagram so that every one in the team clearly understands how the game progression works, and which screens comes after which one. </p>\n<h2 id=\"Game-flow-for-mobiles\"><a href=\"#Game-flow-for-mobiles\" class=\"headerlink\" title=\"Game flow? for mobiles?\"></a>Game flow? for mobiles?</h2><p>So, I <a href=\"http://tinypic.com/view.php?pic=2087ac3&amp;s=5#.WHaAvLZ95Z2\" target=\"_blank\" rel=\"external\">stumbled upon this</a>, and modified it to my own needs and here it is. For mobile devices, Social Leaderboard and IAP are greatly used.</p>\n<p><img src=\"/2015/02/17/Game-Flow-Design-for-mobiles/What-a-Drag-Diagrams.jpg\" alt=\"\"></p>\n<h2 id=\"How-does-it-work\"><a href=\"#How-does-it-work\" class=\"headerlink\" title=\"How does it work?\"></a>How does it work?</h2><ol>\n<li>User taps/clicks the game icon from the app drawer.</li>\n<li>Game Launches with a splash screen, showing the company logo and other frameworks / Libraries used ( if permissible). The Intro Splash screen must not retain more than 3 secs, and should fade to either white, or black.</li>\n<li>If an initial Loading screen is intended (which is recommended), The graphics used should be minimal and should to add to the overhead. It can also display Tips and/or News.</li>\n<li>The Main Menu should be very attractive to give its FIRST IMPRESSION. Do NOT over do the Main Menu, also, try to avoid bluntness. It is the centralized Menu, which will take the user to all the other screens,a nd even QUIT the game too.</li>\n<li>Social Leaderboard, IAP and Missions are the “minimum and must have” features of a mobile game nowdays. If you are dreaming of earning through Ads alone, then good luck keep on dreaming!</li>\n<li>For mobile device, Settings Popup should atleast – sound toggles, Reset Score, Vibration Toggle, etc.</li>\n<li>About Popup must contain a brief intro about the game, and should clearly mention the goal of the game and the alternative links. Also, this is a very good place for embedding Credits.</li>\n<li>Technically, you can give as many Game Modes as you wish. But do take note that you should also provide an Interactive Tutorial for each.</li>\n<li>A Briefing Page us what tells the players about the goals and missions of the level he is going to play. For e.g. Score Bonuses and Unlocks, Friendly Challenges, etc.</li>\n<li>Action is where the actual game takes place. One tip of advice – NEVER, EVER, EVER put advertisements on the main game scene. Gamers will hate it and will be frustrated.</li>\n<li>Game Flow Design lets us investigate the flow of all the screens .</li>\n<li>Both Action and the interactive tutorial should have Pause Buttons.</li>\n<li>A Pause Popup should allow the game to navigate to Main Menu or, resume back to the ongoing game.</li>\n<li>Debriefing Popup should inform the user if he/she won or lose. Score calculation happens at these stage and all the bonus unlocks should be displayed here. On of the critical responsibilities of a game designers is to let the gamer feel paradise after winning a game. Rewards, and exclusive REWARDS. Remember, Most players play games for appreciations, even virtual ones.</li>\n</ol>\n","excerpt":"","more":"<h1 id=\"Game-Flow-Design-for-mobiles\"><a href=\"#Game-Flow-Design-for-mobiles\" class=\"headerlink\" title=\"Game Flow Design for mobiles\"></a>Game Flow Design for mobiles</h1><p>Recently while making one of my games,  my team felt the need to have a standardized game Flow Diagram so that every one in the team clearly understands how the game progression works, and which screens comes after which one. </p>\n<h2 id=\"Game-flow-for-mobiles\"><a href=\"#Game-flow-for-mobiles\" class=\"headerlink\" title=\"Game flow? for mobiles?\"></a>Game flow? for mobiles?</h2><p>So, I <a href=\"http://tinypic.com/view.php?pic=2087ac3&amp;s=5#.WHaAvLZ95Z2\">stumbled upon this</a>, and modified it to my own needs and here it is. For mobile devices, Social Leaderboard and IAP are greatly used.</p>\n<p><img src=\"/2015/02/17/Game-Flow-Design-for-mobiles/What-a-Drag-Diagrams.jpg\" alt=\"\"></p>\n<h2 id=\"How-does-it-work\"><a href=\"#How-does-it-work\" class=\"headerlink\" title=\"How does it work?\"></a>How does it work?</h2><ol>\n<li>User taps/clicks the game icon from the app drawer.</li>\n<li>Game Launches with a splash screen, showing the company logo and other frameworks / Libraries used ( if permissible). The Intro Splash screen must not retain more than 3 secs, and should fade to either white, or black.</li>\n<li>If an initial Loading screen is intended (which is recommended), The graphics used should be minimal and should to add to the overhead. It can also display Tips and/or News.</li>\n<li>The Main Menu should be very attractive to give its FIRST IMPRESSION. Do NOT over do the Main Menu, also, try to avoid bluntness. It is the centralized Menu, which will take the user to all the other screens,a nd even QUIT the game too.</li>\n<li>Social Leaderboard, IAP and Missions are the “minimum and must have” features of a mobile game nowdays. If you are dreaming of earning through Ads alone, then good luck keep on dreaming!</li>\n<li>For mobile device, Settings Popup should atleast – sound toggles, Reset Score, Vibration Toggle, etc.</li>\n<li>About Popup must contain a brief intro about the game, and should clearly mention the goal of the game and the alternative links. Also, this is a very good place for embedding Credits.</li>\n<li>Technically, you can give as many Game Modes as you wish. But do take note that you should also provide an Interactive Tutorial for each.</li>\n<li>A Briefing Page us what tells the players about the goals and missions of the level he is going to play. For e.g. Score Bonuses and Unlocks, Friendly Challenges, etc.</li>\n<li>Action is where the actual game takes place. One tip of advice – NEVER, EVER, EVER put advertisements on the main game scene. Gamers will hate it and will be frustrated.</li>\n<li>Game Flow Design lets us investigate the flow of all the screens .</li>\n<li>Both Action and the interactive tutorial should have Pause Buttons.</li>\n<li>A Pause Popup should allow the game to navigate to Main Menu or, resume back to the ongoing game.</li>\n<li>Debriefing Popup should inform the user if he/she won or lose. Score calculation happens at these stage and all the bonus unlocks should be displayed here. On of the critical responsibilities of a game designers is to let the gamer feel paradise after winning a game. Rewards, and exclusive REWARDS. Remember, Most players play games for appreciations, even virtual ones.</li>\n</ol>\n"},{"title":"#GameDevStream – 01. Catch The Egg","category":"Game Development","author":"Abhishek Deb","date":"2015-03-27T19:04:00.000Z","_content":"# \\#GameDevStream – 01. Catch The Egg\n\nGameDevStream is a series of Live Video Streams of Indie Game Development. This is the first video of a casual game “Catch The Egg”. Use the arrow buttons to move the basket left or right and try to actually “catch the egg” (s) to score higher.\n\n`#GameDevStream`\n\nVideo 1: Catch The Egg\n\nSo, I have decided to start a new Youtube Playlist and upload my streams of Video Game Development, called #GameDevStream. Its basically for beginners and intermediates. Advanced Videos will follow. I am very new to this screen-cast things and so, thought of experimenting with it. The main goal of this initiative is to put a “feel” online how “Game Developers” actually code.\n\nSee the Video:\n\n\n{% youtube mGDrU8nd3WE %}\n\n\nThis is the first game development video of the series #GameDevStream. Its a 2 hour + Video of a simple game “Catch The Egg”. Of-course there are a LOTTTT of things that needs to be taken care of in the game development ( pooling, Managers, etc) but this is just to show how quickly you can make a game, and what feel goes into it. The Next Videos will contain more in-depth improvements (Delegates, Messaging System, Singletons, etc).\n\nThe [Source Code](https://bitbucket.org/skipbits/catchtheegg/) has been uploaded on BitBucket.\n\nFeel free to ask any questions and criticize to your satisfaction. Also, I am looking for other people who are interested in this project and want to share their experience with.\n\n`#GameDevStream`","source":"_discarded/ameDevStream-–-01-Catch-The-Egg.md","raw":"title: '#GameDevStream – 01. Catch The Egg'\ntags:\n  - GameDevStream\n  - Game Development Stream\n  - Tutorial\ncategory: Game Development\ncategories:\n  - Game Development\nauthor: Abhishek Deb\ndate: 2015-03-28 00:34:00\n---\n# \\#GameDevStream – 01. Catch The Egg\n\nGameDevStream is a series of Live Video Streams of Indie Game Development. This is the first video of a casual game “Catch The Egg”. Use the arrow buttons to move the basket left or right and try to actually “catch the egg” (s) to score higher.\n\n`#GameDevStream`\n\nVideo 1: Catch The Egg\n\nSo, I have decided to start a new Youtube Playlist and upload my streams of Video Game Development, called #GameDevStream. Its basically for beginners and intermediates. Advanced Videos will follow. I am very new to this screen-cast things and so, thought of experimenting with it. The main goal of this initiative is to put a “feel” online how “Game Developers” actually code.\n\nSee the Video:\n\n\n{% youtube mGDrU8nd3WE %}\n\n\nThis is the first game development video of the series #GameDevStream. Its a 2 hour + Video of a simple game “Catch The Egg”. Of-course there are a LOTTTT of things that needs to be taken care of in the game development ( pooling, Managers, etc) but this is just to show how quickly you can make a game, and what feel goes into it. The Next Videos will contain more in-depth improvements (Delegates, Messaging System, Singletons, etc).\n\nThe [Source Code](https://bitbucket.org/skipbits/catchtheegg/) has been uploaded on BitBucket.\n\nFeel free to ask any questions and criticize to your satisfaction. Also, I am looking for other people who are interested in this project and want to share their experience with.\n\n`#GameDevStream`","slug":"GameDevStream-–-01-Catch-The-Egg","published":1,"updated":"2017-01-11T19:22:36.744Z","_id":"cixtbxhum0004tavzcp1wsv3r","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"GameDevStream-–-01-Catch-The-Egg\"><a href=\"#GameDevStream-–-01-Catch-The-Egg\" class=\"headerlink\" title=\"#GameDevStream – 01. Catch The Egg\"></a>#GameDevStream – 01. Catch The Egg</h1><p>GameDevStream is a series of Live Video Streams of Indie Game Development. This is the first video of a casual game “Catch The Egg”. Use the arrow buttons to move the basket left or right and try to actually “catch the egg” (s) to score higher.</p>\n<p><code>#GameDevStream</code></p>\n<p>Video 1: Catch The Egg</p>\n<p>So, I have decided to start a new Youtube Playlist and upload my streams of Video Game Development, called #GameDevStream. Its basically for beginners and intermediates. Advanced Videos will follow. I am very new to this screen-cast things and so, thought of experimenting with it. The main goal of this initiative is to put a “feel” online how “Game Developers” actually code.</p>\n<p>See the Video:</p>\n<div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/mGDrU8nd3WE\" frameborder=\"0\" allowfullscreen></iframe></div>\n<p>This is the first game development video of the series #GameDevStream. Its a 2 hour + Video of a simple game “Catch The Egg”. Of-course there are a LOTTTT of things that needs to be taken care of in the game development ( pooling, Managers, etc) but this is just to show how quickly you can make a game, and what feel goes into it. The Next Videos will contain more in-depth improvements (Delegates, Messaging System, Singletons, etc).</p>\n<p>The <a href=\"https://bitbucket.org/skipbits/catchtheegg/\" target=\"_blank\" rel=\"external\">Source Code</a> has been uploaded on BitBucket.</p>\n<p>Feel free to ask any questions and criticize to your satisfaction. Also, I am looking for other people who are interested in this project and want to share their experience with.</p>\n<p><code>#GameDevStream</code></p>\n","excerpt":"","more":"<h1 id=\"GameDevStream-–-01-Catch-The-Egg\"><a href=\"#GameDevStream-–-01-Catch-The-Egg\" class=\"headerlink\" title=\"#GameDevStream – 01. Catch The Egg\"></a>#GameDevStream – 01. Catch The Egg</h1><p>GameDevStream is a series of Live Video Streams of Indie Game Development. This is the first video of a casual game “Catch The Egg”. Use the arrow buttons to move the basket left or right and try to actually “catch the egg” (s) to score higher.</p>\n<p><code>#GameDevStream</code></p>\n<p>Video 1: Catch The Egg</p>\n<p>So, I have decided to start a new Youtube Playlist and upload my streams of Video Game Development, called #GameDevStream. Its basically for beginners and intermediates. Advanced Videos will follow. I am very new to this screen-cast things and so, thought of experimenting with it. The main goal of this initiative is to put a “feel” online how “Game Developers” actually code.</p>\n<p>See the Video:</p>\n<div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/mGDrU8nd3WE\" frameborder=\"0\" allowfullscreen></iframe></div>\n<p>This is the first game development video of the series #GameDevStream. Its a 2 hour + Video of a simple game “Catch The Egg”. Of-course there are a LOTTTT of things that needs to be taken care of in the game development ( pooling, Managers, etc) but this is just to show how quickly you can make a game, and what feel goes into it. The Next Videos will contain more in-depth improvements (Delegates, Messaging System, Singletons, etc).</p>\n<p>The <a href=\"https://bitbucket.org/skipbits/catchtheegg/\">Source Code</a> has been uploaded on BitBucket.</p>\n<p>Feel free to ask any questions and criticize to your satisfaction. Also, I am looking for other people who are interested in this project and want to share their experience with.</p>\n<p><code>#GameDevStream</code></p>\n"},{"title":"How to have a Career as a Game Developer","date":"2014-06-19T18:30:00.000Z","_content":"\n# How to have a Career as a Game Developer\n\n## [ Introduction ]\n\nI don’t intend to sound formal or academic in any sense but then again, this format has already helped a lot of people(including me) so I am going to stick to it anyway.\nYou may have come around many articles and blog on How to have a Career as a Game Developer, this one is just more of a journal/ note/ Task List. All of the key points are arranged in a specific manner, so you may find very short paragraphs.\n\nArticles are:\n- Comparatively Short\n- Updated with Latest Trends and Specs\n- Objective type and To the point\n- Distinctive and Clear\n- Drafts, Diagrams, Examples (just like this one) and Walkthroughs\n- Comparisons with Advantages/Disadvantages, Quotes and Links\n- Challenging as-well-as Motivating\n- References to valuable resources and people\n- Separate Queries in the Forum ( Soon)\n\n## [ STEP 1 ] – Reviewing all the “instincts” and “intuitions”\n\nI created this blog as a reminder for myself from time to time, and as a self-motivation tool. Eventually, it has helped a lot of my friends, local people, and even people from other places (outside my country).\n\nThere is a difference between becoming a game developer, and becoming a good game developer. To become the latter, get yourself acquainted with these following skills –\n\n1. Strong Programming ability ( C++ / Java / C# / ActionScript / JavaScript / …)\n2. Understanding platform architecture (PC/ PlayStation/ XBOX/ Android/ Wii/ iOS/ Steam Box/ … )\n3. Understanding Academics – Maths, Physics, Graphics, AI (Artificial Intelligence), Psychology …\n4. Understanding Tools \n    1. Art Tools -  (Photoshop, Blender/ 3DS/ zBrush), \n    2. Engines  - ( Unity3D, Construct 2, UDK, …), IDEs ( Visual Studio, Xcode)\n5. Creativity in any form – Sketching, Illustrations, Story Telling, Voice Acting\n6. Playing the “damn” Game  – The more you play = The more you get the idea about how others will enjoy or treat your game. Many great game designers have written books on Gameplay Mechanics and Game Play Experience.\n7. Exercise – Crucial for health, both body and mind. In this field, our important asset to contribute is our brains. If your body is not healthy, you’ll probably suffer the Game Developer’s Block- you will run out of ideas, get irritated and depressed. Work it out champ.\n\n\n## [ STEP 2 ] – Knowing what “Game Developers” do\n\nWikipedia quotes:\n> Video game development is the process of creating a video game. Development is undertaken by a game developer, which may range from a single person to a large business. …\n\n\nClearly this is way too simple for beginners to catch. So I am gonna run through very basic work each team needs to carry out : \n**Video Game Developers** (Devs) are those people who write bunch of codes (respectfully, program) for a game software in or out of a company.\n**Artists** make gun models and bullet colours. Developers make it possible for the players to fire a bullet out of a gun. \n**Designer**, however, work between them and set up the rules of how fast the player can fire bullets.\n\nThe mainstream people have always gone to become a Game Designer by following the path of either a Game Artist or a Game Developer and excelling at it. This is purely for fallback and guidance purpose. You are free to roam around and find your own ways of achieving it.\nSo, the bottom line is, you need to know how to program. Although there are some products in the market who claim to produce games “without programming”, I would recommend against them as they will only slow you down. I am not saying they are bad and all but, there does exist fast and effective approaches than using *GameMaker* kind of products.\n\nAlso, do not get tempted to freeze yourself with C++ as you might have heard that pro game developers in industries use only C++. Its a fact. Starting out with C++ will surely teach you many facets and make you technically very strong. But then again, there does exist fast and effective approaches than using hardcore beasts like C++.\n\n## [ STEP 3 ] – Understanding under-the-hood\n\n### The Problem\n\nSome learn from text books, some from practical implementations, some from Audio-Video and Interaction. The problem is, the way of understanding and acquiring knowledge is not same and consistent for everyone.\n\n### Blog to the rescue\n\nAlthough, a fact still remains a fact for everyone. So, instead of shedding different versions of perspective over a single thing, lets think tactically and try to acquire knowledge based on patterns, guidelines and real-time implementations.\n\nThis article and/or blog is way too immature to be used as a text book. Just read it whenever you feel you want to know something more. And obviously, do practice it along with because Game programming is more of a practical thing, than mere theory.\n\nYou do need some basic understanding of certain things before starting out. Please review the chapters and get yourself acquainted with specified topics as it will be mentioned in the following chapters.\n\n## [ STEP 4 ] – All Hammers and Nails\n\n### Game Art:\n\n- Blender / 3DS MAX\n- Adobe Photoshop\n- Adobe After Effects (For Post Production)\n- ZBrush\n\n\n### Game Programming:\n\n- Combo 1: Visual C++ with DirectX 11\n- Combo 2: Visual C++ with IrrLicht/ Ogre3D engine\n- Combo 3: ~~Visual C# with SlimDx~~ (Discontinued)\n- Combo 4: Visual C++ with OpenGL\n- Combo 5: Java with openGL\n- Combo 6: Unity3D with C#\n- Combo 7: Unreal Engine, Blueprint\n- ... many more\n\nThere are so many of ‘em\n\nIMHO, there are way more combo than you can imagine. You don’t need to worry about that. My Main focus will be on Unity, Unreal Engine, C++  and DirectX. Although I would introduce other software just for the sake of comparison and  introductory knowledge.\n\n## [ STEP 5 ] – Get Down’ and Dirty\n\n### Why DirectX? Isn’t OpenGL easier?\nI really don’t want to get in the religious debate between whether to choose DirectX or OpenGL. I really feel each has its own advantage and disadvantage. If you are more like an OpenGL person, I would recommend  you to come to this site later as I will be adding OpenGL tuts also. If you want to compare both of them, do it here.\nAnd for everyone else who want to row the DirectX boat, lets get started to the amazing adventure, Lets Rock! `\\m/`\n\n![](https://upload.wikimedia.org/wikipedia/en/0/01/Directx9.png)\n \n\n \n\n### Wait, what the heck is this DirectX and OpenGL and all those things?\nHmm, if everything above looks alien to you, don’t panic. If you don’t know these but surely have heard of these and it is exciting your blood cells then, congratulate yourself, you do have game development in your gene.\n_Direct Answer_: DirectX (Direct3D) and OpenGL are two of the most popular Graphics APIs that help you to build amazingly super cool games. DirectX is a proprietary software by Microsoft an OpenGL is an open source library maintained by Silicon Graphics. DirectX SDK (Software Development Kit) contains many APIs ( Application Programming Interface ) such as – Direct3D, XACT3, DirectInput, etc.\n\n### Seriously, what are these things? You are freaking me out!\nThink of it as a collection of small building blocks. We place each of them on top of the other to make a big castle. It doesn’t matter what color you choose (DirectX or OpenGL), what matters is your game logic. Keep Rocking `\\m/`.\n\n### Am I eligible to learn these stuff?\nAny one with the passion of making games is eligible. All the posts here are written keeping in mind that the reader is novice.\nSince DirectX and OpenGL are advanced topics, it is recommended that the user knows the basics of C++ programming language like – Classes and Objects, Inheritance, Pointers etc. Posts requiring this stuff will also have a reference to a crash course. Still, Basic knowledge about C++ is highly recommended. Want to learn now – Go [here](http://www.cprogramming.com/tutorial/lesson1.html).\n\n### Sources of this blog\nOne source is never enough. Admit it. Plus, using multiple sources lets you gain in-depth knowledge in a very reliable and easy way. I have tried to compile all the sources in to a very simple and easy manner. List of Sources:\n\n- [DirectX Tutorial](http://www.directxtutorial.com/Tutorial11/tutorials.aspx)\n- [RasterTek DirectX 11](http://www.rastertek.com/tutdx11.html)\n- [Beginning DirectX 11 Game Programming (by Allen and Wendy)](http://www.amazon.com/Beginning-DirectX-11-Game-Programming/dp/1435458958/ref=sr_1_2?ie=UTF8&qid=1347447743&sr=8-2&keywords=directX+11+Game+Programming)\n- [DirectX SDK June 2010 Documentation and Samples](http://www.microsoft.com/en-in/download/confirmation.aspx?id=6812)\n- [GameDev.net](http://www.gamedev.net/)\n- [ToyMaker.info](http://www.toymaker.info/Games/index.html)\n- Some cool friends who already know Dx\n\n\n## [ STEP 6 ] – Lets get started\nSo now that you have a somewhat clear idea about making games, start small, and be ready to fail. In the next post, we will start with basic comparison, selection and configuration of different tools, install them and review their alternatives and explore more and more resources.\nWe will take a peek on conversation among high profile game developers and great people in the game Industries to motivate yourself.\nAlso, we will learn something good about being healthy.\nSo prepare yourself – mentally, physically, technically and psychologically and every damn-ally. You are going to fight, compete and also contribute to the world of Gaming and it's Development. I wish you all the luck.\n\n \n\n## [ Homework ] – No, you are not escaping this time …\nFor starters, read along these pages for a reference. Feel free to choose any of them.\n\n- [I want to be a game developer](http://www.gamefromscratch.com/post/2011/08/04/I-want-to-be-a-game-developer.aspx)\n- [A Beginner’s Guide To Making Your First Video Game](http://kotaku.com/5979539/a-beginners-guide-to-making-your-first-video-game)\n- [How to Become a Video Game Programmer](http://www.wikihow.com/Become-a-Video-Game-Programmer)\n- [Do You Have What it Takes to Be a Game Developer?](http://www.fastgraph.com/makegames/chapt1.html)\n- [Myths around the Game Development Industry](http://www.gamasutra.com/blogs/TerryWilson/20130822/198823/Myths_around_the_Game_Development_Industry.php)\n\n## [ Suggestions / Feedback / Criticism: ]\n\nI am open to criticism and feedbacks. If you feel that I have caught a different path somewhere in my article, feel free to contact me. If you want me to write an article concerning a very important topic, please use the forum or email me. All your feedback and suggestions are highly appreciated. Thanks.\n\nI hope I could throw some light on how to have a career as  a game developer.\n\n## [ Disclaimer: ]\n\nAll images used are copyrighted material. DirectX is Licensed under Microsoft.\n\n","source":"_posts/How-to-have-a-Career-as-a-Game-Developer.md","raw":"---\ntitle: How to have a Career as a Game Developer\ndate: 2014-06-20 \ntags: \n- Career\n- career in game development\n- start\n- bootstraping\ncategory: Game Development\n---\n\n# How to have a Career as a Game Developer\n\n## [ Introduction ]\n\nI don’t intend to sound formal or academic in any sense but then again, this format has already helped a lot of people(including me) so I am going to stick to it anyway.\nYou may have come around many articles and blog on How to have a Career as a Game Developer, this one is just more of a journal/ note/ Task List. All of the key points are arranged in a specific manner, so you may find very short paragraphs.\n\nArticles are:\n- Comparatively Short\n- Updated with Latest Trends and Specs\n- Objective type and To the point\n- Distinctive and Clear\n- Drafts, Diagrams, Examples (just like this one) and Walkthroughs\n- Comparisons with Advantages/Disadvantages, Quotes and Links\n- Challenging as-well-as Motivating\n- References to valuable resources and people\n- Separate Queries in the Forum ( Soon)\n\n## [ STEP 1 ] – Reviewing all the “instincts” and “intuitions”\n\nI created this blog as a reminder for myself from time to time, and as a self-motivation tool. Eventually, it has helped a lot of my friends, local people, and even people from other places (outside my country).\n\nThere is a difference between becoming a game developer, and becoming a good game developer. To become the latter, get yourself acquainted with these following skills –\n\n1. Strong Programming ability ( C++ / Java / C# / ActionScript / JavaScript / …)\n2. Understanding platform architecture (PC/ PlayStation/ XBOX/ Android/ Wii/ iOS/ Steam Box/ … )\n3. Understanding Academics – Maths, Physics, Graphics, AI (Artificial Intelligence), Psychology …\n4. Understanding Tools \n    1. Art Tools -  (Photoshop, Blender/ 3DS/ zBrush), \n    2. Engines  - ( Unity3D, Construct 2, UDK, …), IDEs ( Visual Studio, Xcode)\n5. Creativity in any form – Sketching, Illustrations, Story Telling, Voice Acting\n6. Playing the “damn” Game  – The more you play = The more you get the idea about how others will enjoy or treat your game. Many great game designers have written books on Gameplay Mechanics and Game Play Experience.\n7. Exercise – Crucial for health, both body and mind. In this field, our important asset to contribute is our brains. If your body is not healthy, you’ll probably suffer the Game Developer’s Block- you will run out of ideas, get irritated and depressed. Work it out champ.\n\n\n## [ STEP 2 ] – Knowing what “Game Developers” do\n\nWikipedia quotes:\n> Video game development is the process of creating a video game. Development is undertaken by a game developer, which may range from a single person to a large business. …\n\n\nClearly this is way too simple for beginners to catch. So I am gonna run through very basic work each team needs to carry out : \n**Video Game Developers** (Devs) are those people who write bunch of codes (respectfully, program) for a game software in or out of a company.\n**Artists** make gun models and bullet colours. Developers make it possible for the players to fire a bullet out of a gun. \n**Designer**, however, work between them and set up the rules of how fast the player can fire bullets.\n\nThe mainstream people have always gone to become a Game Designer by following the path of either a Game Artist or a Game Developer and excelling at it. This is purely for fallback and guidance purpose. You are free to roam around and find your own ways of achieving it.\nSo, the bottom line is, you need to know how to program. Although there are some products in the market who claim to produce games “without programming”, I would recommend against them as they will only slow you down. I am not saying they are bad and all but, there does exist fast and effective approaches than using *GameMaker* kind of products.\n\nAlso, do not get tempted to freeze yourself with C++ as you might have heard that pro game developers in industries use only C++. Its a fact. Starting out with C++ will surely teach you many facets and make you technically very strong. But then again, there does exist fast and effective approaches than using hardcore beasts like C++.\n\n## [ STEP 3 ] – Understanding under-the-hood\n\n### The Problem\n\nSome learn from text books, some from practical implementations, some from Audio-Video and Interaction. The problem is, the way of understanding and acquiring knowledge is not same and consistent for everyone.\n\n### Blog to the rescue\n\nAlthough, a fact still remains a fact for everyone. So, instead of shedding different versions of perspective over a single thing, lets think tactically and try to acquire knowledge based on patterns, guidelines and real-time implementations.\n\nThis article and/or blog is way too immature to be used as a text book. Just read it whenever you feel you want to know something more. And obviously, do practice it along with because Game programming is more of a practical thing, than mere theory.\n\nYou do need some basic understanding of certain things before starting out. Please review the chapters and get yourself acquainted with specified topics as it will be mentioned in the following chapters.\n\n## [ STEP 4 ] – All Hammers and Nails\n\n### Game Art:\n\n- Blender / 3DS MAX\n- Adobe Photoshop\n- Adobe After Effects (For Post Production)\n- ZBrush\n\n\n### Game Programming:\n\n- Combo 1: Visual C++ with DirectX 11\n- Combo 2: Visual C++ with IrrLicht/ Ogre3D engine\n- Combo 3: ~~Visual C# with SlimDx~~ (Discontinued)\n- Combo 4: Visual C++ with OpenGL\n- Combo 5: Java with openGL\n- Combo 6: Unity3D with C#\n- Combo 7: Unreal Engine, Blueprint\n- ... many more\n\nThere are so many of ‘em\n\nIMHO, there are way more combo than you can imagine. You don’t need to worry about that. My Main focus will be on Unity, Unreal Engine, C++  and DirectX. Although I would introduce other software just for the sake of comparison and  introductory knowledge.\n\n## [ STEP 5 ] – Get Down’ and Dirty\n\n### Why DirectX? Isn’t OpenGL easier?\nI really don’t want to get in the religious debate between whether to choose DirectX or OpenGL. I really feel each has its own advantage and disadvantage. If you are more like an OpenGL person, I would recommend  you to come to this site later as I will be adding OpenGL tuts also. If you want to compare both of them, do it here.\nAnd for everyone else who want to row the DirectX boat, lets get started to the amazing adventure, Lets Rock! `\\m/`\n\n![](https://upload.wikimedia.org/wikipedia/en/0/01/Directx9.png)\n \n\n \n\n### Wait, what the heck is this DirectX and OpenGL and all those things?\nHmm, if everything above looks alien to you, don’t panic. If you don’t know these but surely have heard of these and it is exciting your blood cells then, congratulate yourself, you do have game development in your gene.\n_Direct Answer_: DirectX (Direct3D) and OpenGL are two of the most popular Graphics APIs that help you to build amazingly super cool games. DirectX is a proprietary software by Microsoft an OpenGL is an open source library maintained by Silicon Graphics. DirectX SDK (Software Development Kit) contains many APIs ( Application Programming Interface ) such as – Direct3D, XACT3, DirectInput, etc.\n\n### Seriously, what are these things? You are freaking me out!\nThink of it as a collection of small building blocks. We place each of them on top of the other to make a big castle. It doesn’t matter what color you choose (DirectX or OpenGL), what matters is your game logic. Keep Rocking `\\m/`.\n\n### Am I eligible to learn these stuff?\nAny one with the passion of making games is eligible. All the posts here are written keeping in mind that the reader is novice.\nSince DirectX and OpenGL are advanced topics, it is recommended that the user knows the basics of C++ programming language like – Classes and Objects, Inheritance, Pointers etc. Posts requiring this stuff will also have a reference to a crash course. Still, Basic knowledge about C++ is highly recommended. Want to learn now – Go [here](http://www.cprogramming.com/tutorial/lesson1.html).\n\n### Sources of this blog\nOne source is never enough. Admit it. Plus, using multiple sources lets you gain in-depth knowledge in a very reliable and easy way. I have tried to compile all the sources in to a very simple and easy manner. List of Sources:\n\n- [DirectX Tutorial](http://www.directxtutorial.com/Tutorial11/tutorials.aspx)\n- [RasterTek DirectX 11](http://www.rastertek.com/tutdx11.html)\n- [Beginning DirectX 11 Game Programming (by Allen and Wendy)](http://www.amazon.com/Beginning-DirectX-11-Game-Programming/dp/1435458958/ref=sr_1_2?ie=UTF8&qid=1347447743&sr=8-2&keywords=directX+11+Game+Programming)\n- [DirectX SDK June 2010 Documentation and Samples](http://www.microsoft.com/en-in/download/confirmation.aspx?id=6812)\n- [GameDev.net](http://www.gamedev.net/)\n- [ToyMaker.info](http://www.toymaker.info/Games/index.html)\n- Some cool friends who already know Dx\n\n\n## [ STEP 6 ] – Lets get started\nSo now that you have a somewhat clear idea about making games, start small, and be ready to fail. In the next post, we will start with basic comparison, selection and configuration of different tools, install them and review their alternatives and explore more and more resources.\nWe will take a peek on conversation among high profile game developers and great people in the game Industries to motivate yourself.\nAlso, we will learn something good about being healthy.\nSo prepare yourself – mentally, physically, technically and psychologically and every damn-ally. You are going to fight, compete and also contribute to the world of Gaming and it's Development. I wish you all the luck.\n\n \n\n## [ Homework ] – No, you are not escaping this time …\nFor starters, read along these pages for a reference. Feel free to choose any of them.\n\n- [I want to be a game developer](http://www.gamefromscratch.com/post/2011/08/04/I-want-to-be-a-game-developer.aspx)\n- [A Beginner’s Guide To Making Your First Video Game](http://kotaku.com/5979539/a-beginners-guide-to-making-your-first-video-game)\n- [How to Become a Video Game Programmer](http://www.wikihow.com/Become-a-Video-Game-Programmer)\n- [Do You Have What it Takes to Be a Game Developer?](http://www.fastgraph.com/makegames/chapt1.html)\n- [Myths around the Game Development Industry](http://www.gamasutra.com/blogs/TerryWilson/20130822/198823/Myths_around_the_Game_Development_Industry.php)\n\n## [ Suggestions / Feedback / Criticism: ]\n\nI am open to criticism and feedbacks. If you feel that I have caught a different path somewhere in my article, feel free to contact me. If you want me to write an article concerning a very important topic, please use the forum or email me. All your feedback and suggestions are highly appreciated. Thanks.\n\nI hope I could throw some light on how to have a career as  a game developer.\n\n## [ Disclaimer: ]\n\nAll images used are copyrighted material. DirectX is Licensed under Microsoft.\n\n","slug":"How-to-have-a-Career-as-a-Game-Developer","published":1,"updated":"2017-01-08T22:41:18.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cixtbxhut0005tavzzidbr6h5","content":"<h1 id=\"How-to-have-a-Career-as-a-Game-Developer\"><a href=\"#How-to-have-a-Career-as-a-Game-Developer\" class=\"headerlink\" title=\"How to have a Career as a Game Developer\"></a>How to have a Career as a Game Developer</h1><h2 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"[ Introduction ]\"></a>[ Introduction ]</h2><p>I don’t intend to sound formal or academic in any sense but then again, this format has already helped a lot of people(including me) so I am going to stick to it anyway.<br>You may have come around many articles and blog on How to have a Career as a Game Developer, this one is just more of a journal/ note/ Task List. All of the key points are arranged in a specific manner, so you may find very short paragraphs.</p>\n<p>Articles are:</p>\n<ul>\n<li>Comparatively Short</li>\n<li>Updated with Latest Trends and Specs</li>\n<li>Objective type and To the point</li>\n<li>Distinctive and Clear</li>\n<li>Drafts, Diagrams, Examples (just like this one) and Walkthroughs</li>\n<li>Comparisons with Advantages/Disadvantages, Quotes and Links</li>\n<li>Challenging as-well-as Motivating</li>\n<li>References to valuable resources and people</li>\n<li>Separate Queries in the Forum ( Soon)</li>\n</ul>\n<h2 id=\"STEP-1-–-Reviewing-all-the-“instincts”-and-“intuitions”\"><a href=\"#STEP-1-–-Reviewing-all-the-“instincts”-and-“intuitions”\" class=\"headerlink\" title=\"[ STEP 1 ] – Reviewing all the “instincts” and “intuitions”\"></a>[ STEP 1 ] – Reviewing all the “instincts” and “intuitions”</h2><p>I created this blog as a reminder for myself from time to time, and as a self-motivation tool. Eventually, it has helped a lot of my friends, local people, and even people from other places (outside my country).</p>\n<p>There is a difference between becoming a game developer, and becoming a good game developer. To become the latter, get yourself acquainted with these following skills –</p>\n<ol>\n<li>Strong Programming ability ( C++ / Java / C# / ActionScript / JavaScript / …)</li>\n<li>Understanding platform architecture (PC/ PlayStation/ XBOX/ Android/ Wii/ iOS/ Steam Box/ … )</li>\n<li>Understanding Academics – Maths, Physics, Graphics, AI (Artificial Intelligence), Psychology …</li>\n<li>Understanding Tools <ol>\n<li>Art Tools -  (Photoshop, Blender/ 3DS/ zBrush), </li>\n<li>Engines  - ( Unity3D, Construct 2, UDK, …), IDEs ( Visual Studio, Xcode)</li>\n</ol>\n</li>\n<li>Creativity in any form – Sketching, Illustrations, Story Telling, Voice Acting</li>\n<li>Playing the “damn” Game  – The more you play = The more you get the idea about how others will enjoy or treat your game. Many great game designers have written books on Gameplay Mechanics and Game Play Experience.</li>\n<li>Exercise – Crucial for health, both body and mind. In this field, our important asset to contribute is our brains. If your body is not healthy, you’ll probably suffer the Game Developer’s Block- you will run out of ideas, get irritated and depressed. Work it out champ.</li>\n</ol>\n<h2 id=\"STEP-2-–-Knowing-what-“Game-Developers”-do\"><a href=\"#STEP-2-–-Knowing-what-“Game-Developers”-do\" class=\"headerlink\" title=\"[ STEP 2 ] – Knowing what “Game Developers” do\"></a>[ STEP 2 ] – Knowing what “Game Developers” do</h2><p>Wikipedia quotes:</p>\n<blockquote>\n<p>Video game development is the process of creating a video game. Development is undertaken by a game developer, which may range from a single person to a large business. …</p>\n</blockquote>\n<p>Clearly this is way too simple for beginners to catch. So I am gonna run through very basic work each team needs to carry out :<br><strong>Video Game Developers</strong> (Devs) are those people who write bunch of codes (respectfully, program) for a game software in or out of a company.<br><strong>Artists</strong> make gun models and bullet colours. Developers make it possible for the players to fire a bullet out of a gun.<br><strong>Designer</strong>, however, work between them and set up the rules of how fast the player can fire bullets.</p>\n<p>The mainstream people have always gone to become a Game Designer by following the path of either a Game Artist or a Game Developer and excelling at it. This is purely for fallback and guidance purpose. You are free to roam around and find your own ways of achieving it.<br>So, the bottom line is, you need to know how to program. Although there are some products in the market who claim to produce games “without programming”, I would recommend against them as they will only slow you down. I am not saying they are bad and all but, there does exist fast and effective approaches than using <em>GameMaker</em> kind of products.</p>\n<p>Also, do not get tempted to freeze yourself with C++ as you might have heard that pro game developers in industries use only C++. Its a fact. Starting out with C++ will surely teach you many facets and make you technically very strong. But then again, there does exist fast and effective approaches than using hardcore beasts like C++.</p>\n<h2 id=\"STEP-3-–-Understanding-under-the-hood\"><a href=\"#STEP-3-–-Understanding-under-the-hood\" class=\"headerlink\" title=\"[ STEP 3 ] – Understanding under-the-hood\"></a>[ STEP 3 ] – Understanding under-the-hood</h2><h3 id=\"The-Problem\"><a href=\"#The-Problem\" class=\"headerlink\" title=\"The Problem\"></a>The Problem</h3><p>Some learn from text books, some from practical implementations, some from Audio-Video and Interaction. The problem is, the way of understanding and acquiring knowledge is not same and consistent for everyone.</p>\n<h3 id=\"Blog-to-the-rescue\"><a href=\"#Blog-to-the-rescue\" class=\"headerlink\" title=\"Blog to the rescue\"></a>Blog to the rescue</h3><p>Although, a fact still remains a fact for everyone. So, instead of shedding different versions of perspective over a single thing, lets think tactically and try to acquire knowledge based on patterns, guidelines and real-time implementations.</p>\n<p>This article and/or blog is way too immature to be used as a text book. Just read it whenever you feel you want to know something more. And obviously, do practice it along with because Game programming is more of a practical thing, than mere theory.</p>\n<p>You do need some basic understanding of certain things before starting out. Please review the chapters and get yourself acquainted with specified topics as it will be mentioned in the following chapters.</p>\n<h2 id=\"STEP-4-–-All-Hammers-and-Nails\"><a href=\"#STEP-4-–-All-Hammers-and-Nails\" class=\"headerlink\" title=\"[ STEP 4 ] – All Hammers and Nails\"></a>[ STEP 4 ] – All Hammers and Nails</h2><h3 id=\"Game-Art\"><a href=\"#Game-Art\" class=\"headerlink\" title=\"Game Art:\"></a>Game Art:</h3><ul>\n<li>Blender / 3DS MAX</li>\n<li>Adobe Photoshop</li>\n<li>Adobe After Effects (For Post Production)</li>\n<li>ZBrush</li>\n</ul>\n<h3 id=\"Game-Programming\"><a href=\"#Game-Programming\" class=\"headerlink\" title=\"Game Programming:\"></a>Game Programming:</h3><ul>\n<li>Combo 1: Visual C++ with DirectX 11</li>\n<li>Combo 2: Visual C++ with IrrLicht/ Ogre3D engine</li>\n<li>Combo 3: <del>Visual C# with SlimDx</del> (Discontinued)</li>\n<li>Combo 4: Visual C++ with OpenGL</li>\n<li>Combo 5: Java with openGL</li>\n<li>Combo 6: Unity3D with C#</li>\n<li>Combo 7: Unreal Engine, Blueprint</li>\n<li>… many more</li>\n</ul>\n<p>There are so many of ‘em</p>\n<p>IMHO, there are way more combo than you can imagine. You don’t need to worry about that. My Main focus will be on Unity, Unreal Engine, C++  and DirectX. Although I would introduce other software just for the sake of comparison and  introductory knowledge.</p>\n<h2 id=\"STEP-5-–-Get-Down’-and-Dirty\"><a href=\"#STEP-5-–-Get-Down’-and-Dirty\" class=\"headerlink\" title=\"[ STEP 5 ] – Get Down’ and Dirty\"></a>[ STEP 5 ] – Get Down’ and Dirty</h2><h3 id=\"Why-DirectX-Isn’t-OpenGL-easier\"><a href=\"#Why-DirectX-Isn’t-OpenGL-easier\" class=\"headerlink\" title=\"Why DirectX? Isn’t OpenGL easier?\"></a>Why DirectX? Isn’t OpenGL easier?</h3><p>I really don’t want to get in the religious debate between whether to choose DirectX or OpenGL. I really feel each has its own advantage and disadvantage. If you are more like an OpenGL person, I would recommend  you to come to this site later as I will be adding OpenGL tuts also. If you want to compare both of them, do it here.<br>And for everyone else who want to row the DirectX boat, lets get started to the amazing adventure, Lets Rock! <code>\\m/</code></p>\n<p><img src=\"https://upload.wikimedia.org/wikipedia/en/0/01/Directx9.png\" alt=\"\"></p>\n<h3 id=\"Wait-what-the-heck-is-this-DirectX-and-OpenGL-and-all-those-things\"><a href=\"#Wait-what-the-heck-is-this-DirectX-and-OpenGL-and-all-those-things\" class=\"headerlink\" title=\"Wait, what the heck is this DirectX and OpenGL and all those things?\"></a>Wait, what the heck is this DirectX and OpenGL and all those things?</h3><p>Hmm, if everything above looks alien to you, don’t panic. If you don’t know these but surely have heard of these and it is exciting your blood cells then, congratulate yourself, you do have game development in your gene.<br><em>Direct Answer</em>: DirectX (Direct3D) and OpenGL are two of the most popular Graphics APIs that help you to build amazingly super cool games. DirectX is a proprietary software by Microsoft an OpenGL is an open source library maintained by Silicon Graphics. DirectX SDK (Software Development Kit) contains many APIs ( Application Programming Interface ) such as – Direct3D, XACT3, DirectInput, etc.</p>\n<h3 id=\"Seriously-what-are-these-things-You-are-freaking-me-out\"><a href=\"#Seriously-what-are-these-things-You-are-freaking-me-out\" class=\"headerlink\" title=\"Seriously, what are these things? You are freaking me out!\"></a>Seriously, what are these things? You are freaking me out!</h3><p>Think of it as a collection of small building blocks. We place each of them on top of the other to make a big castle. It doesn’t matter what color you choose (DirectX or OpenGL), what matters is your game logic. Keep Rocking <code>\\m/</code>.</p>\n<h3 id=\"Am-I-eligible-to-learn-these-stuff\"><a href=\"#Am-I-eligible-to-learn-these-stuff\" class=\"headerlink\" title=\"Am I eligible to learn these stuff?\"></a>Am I eligible to learn these stuff?</h3><p>Any one with the passion of making games is eligible. All the posts here are written keeping in mind that the reader is novice.<br>Since DirectX and OpenGL are advanced topics, it is recommended that the user knows the basics of C++ programming language like – Classes and Objects, Inheritance, Pointers etc. Posts requiring this stuff will also have a reference to a crash course. Still, Basic knowledge about C++ is highly recommended. Want to learn now – Go <a href=\"http://www.cprogramming.com/tutorial/lesson1.html\" target=\"_blank\" rel=\"external\">here</a>.</p>\n<h3 id=\"Sources-of-this-blog\"><a href=\"#Sources-of-this-blog\" class=\"headerlink\" title=\"Sources of this blog\"></a>Sources of this blog</h3><p>One source is never enough. Admit it. Plus, using multiple sources lets you gain in-depth knowledge in a very reliable and easy way. I have tried to compile all the sources in to a very simple and easy manner. List of Sources:</p>\n<ul>\n<li><a href=\"http://www.directxtutorial.com/Tutorial11/tutorials.aspx\" target=\"_blank\" rel=\"external\">DirectX Tutorial</a></li>\n<li><a href=\"http://www.rastertek.com/tutdx11.html\" target=\"_blank\" rel=\"external\">RasterTek DirectX 11</a></li>\n<li><a href=\"http://www.amazon.com/Beginning-DirectX-11-Game-Programming/dp/1435458958/ref=sr_1_2?ie=UTF8&amp;qid=1347447743&amp;sr=8-2&amp;keywords=directX+11+Game+Programming\" target=\"_blank\" rel=\"external\">Beginning DirectX 11 Game Programming (by Allen and Wendy)</a></li>\n<li><a href=\"http://www.microsoft.com/en-in/download/confirmation.aspx?id=6812\" target=\"_blank\" rel=\"external\">DirectX SDK June 2010 Documentation and Samples</a></li>\n<li><a href=\"http://www.gamedev.net/\" target=\"_blank\" rel=\"external\">GameDev.net</a></li>\n<li><a href=\"http://www.toymaker.info/Games/index.html\" target=\"_blank\" rel=\"external\">ToyMaker.info</a></li>\n<li>Some cool friends who already know Dx</li>\n</ul>\n<h2 id=\"STEP-6-–-Lets-get-started\"><a href=\"#STEP-6-–-Lets-get-started\" class=\"headerlink\" title=\"[ STEP 6 ] – Lets get started\"></a>[ STEP 6 ] – Lets get started</h2><p>So now that you have a somewhat clear idea about making games, start small, and be ready to fail. In the next post, we will start with basic comparison, selection and configuration of different tools, install them and review their alternatives and explore more and more resources.<br>We will take a peek on conversation among high profile game developers and great people in the game Industries to motivate yourself.<br>Also, we will learn something good about being healthy.<br>So prepare yourself – mentally, physically, technically and psychologically and every damn-ally. You are going to fight, compete and also contribute to the world of Gaming and it’s Development. I wish you all the luck.</p>\n<h2 id=\"Homework-–-No-you-are-not-escaping-this-time-…\"><a href=\"#Homework-–-No-you-are-not-escaping-this-time-…\" class=\"headerlink\" title=\"[ Homework ] – No, you are not escaping this time …\"></a>[ Homework ] – No, you are not escaping this time …</h2><p>For starters, read along these pages for a reference. Feel free to choose any of them.</p>\n<ul>\n<li><a href=\"http://www.gamefromscratch.com/post/2011/08/04/I-want-to-be-a-game-developer.aspx\" target=\"_blank\" rel=\"external\">I want to be a game developer</a></li>\n<li><a href=\"http://kotaku.com/5979539/a-beginners-guide-to-making-your-first-video-game\" target=\"_blank\" rel=\"external\">A Beginner’s Guide To Making Your First Video Game</a></li>\n<li><a href=\"http://www.wikihow.com/Become-a-Video-Game-Programmer\" target=\"_blank\" rel=\"external\">How to Become a Video Game Programmer</a></li>\n<li><a href=\"http://www.fastgraph.com/makegames/chapt1.html\" target=\"_blank\" rel=\"external\">Do You Have What it Takes to Be a Game Developer?</a></li>\n<li><a href=\"http://www.gamasutra.com/blogs/TerryWilson/20130822/198823/Myths_around_the_Game_Development_Industry.php\" target=\"_blank\" rel=\"external\">Myths around the Game Development Industry</a></li>\n</ul>\n<h2 id=\"Suggestions-Feedback-Criticism\"><a href=\"#Suggestions-Feedback-Criticism\" class=\"headerlink\" title=\"[ Suggestions / Feedback / Criticism: ]\"></a>[ Suggestions / Feedback / Criticism: ]</h2><p>I am open to criticism and feedbacks. If you feel that I have caught a different path somewhere in my article, feel free to contact me. If you want me to write an article concerning a very important topic, please use the forum or email me. All your feedback and suggestions are highly appreciated. Thanks.</p>\n<p>I hope I could throw some light on how to have a career as  a game developer.</p>\n<h2 id=\"Disclaimer\"><a href=\"#Disclaimer\" class=\"headerlink\" title=\"[ Disclaimer: ]\"></a>[ Disclaimer: ]</h2><p>All images used are copyrighted material. DirectX is Licensed under Microsoft.</p>\n","excerpt":"","more":"<h1 id=\"How-to-have-a-Career-as-a-Game-Developer\"><a href=\"#How-to-have-a-Career-as-a-Game-Developer\" class=\"headerlink\" title=\"How to have a Career as a Game Developer\"></a>How to have a Career as a Game Developer</h1><h2 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"[ Introduction ]\"></a>[ Introduction ]</h2><p>I don’t intend to sound formal or academic in any sense but then again, this format has already helped a lot of people(including me) so I am going to stick to it anyway.<br>You may have come around many articles and blog on How to have a Career as a Game Developer, this one is just more of a journal/ note/ Task List. All of the key points are arranged in a specific manner, so you may find very short paragraphs.</p>\n<p>Articles are:</p>\n<ul>\n<li>Comparatively Short</li>\n<li>Updated with Latest Trends and Specs</li>\n<li>Objective type and To the point</li>\n<li>Distinctive and Clear</li>\n<li>Drafts, Diagrams, Examples (just like this one) and Walkthroughs</li>\n<li>Comparisons with Advantages/Disadvantages, Quotes and Links</li>\n<li>Challenging as-well-as Motivating</li>\n<li>References to valuable resources and people</li>\n<li>Separate Queries in the Forum ( Soon)</li>\n</ul>\n<h2 id=\"STEP-1-–-Reviewing-all-the-“instincts”-and-“intuitions”\"><a href=\"#STEP-1-–-Reviewing-all-the-“instincts”-and-“intuitions”\" class=\"headerlink\" title=\"[ STEP 1 ] – Reviewing all the “instincts” and “intuitions”\"></a>[ STEP 1 ] – Reviewing all the “instincts” and “intuitions”</h2><p>I created this blog as a reminder for myself from time to time, and as a self-motivation tool. Eventually, it has helped a lot of my friends, local people, and even people from other places (outside my country).</p>\n<p>There is a difference between becoming a game developer, and becoming a good game developer. To become the latter, get yourself acquainted with these following skills –</p>\n<ol>\n<li>Strong Programming ability ( C++ / Java / C# / ActionScript / JavaScript / …)</li>\n<li>Understanding platform architecture (PC/ PlayStation/ XBOX/ Android/ Wii/ iOS/ Steam Box/ … )</li>\n<li>Understanding Academics – Maths, Physics, Graphics, AI (Artificial Intelligence), Psychology …</li>\n<li>Understanding Tools <ol>\n<li>Art Tools -  (Photoshop, Blender/ 3DS/ zBrush), </li>\n<li>Engines  - ( Unity3D, Construct 2, UDK, …), IDEs ( Visual Studio, Xcode)</li>\n</ol>\n</li>\n<li>Creativity in any form – Sketching, Illustrations, Story Telling, Voice Acting</li>\n<li>Playing the “damn” Game  – The more you play = The more you get the idea about how others will enjoy or treat your game. Many great game designers have written books on Gameplay Mechanics and Game Play Experience.</li>\n<li>Exercise – Crucial for health, both body and mind. In this field, our important asset to contribute is our brains. If your body is not healthy, you’ll probably suffer the Game Developer’s Block- you will run out of ideas, get irritated and depressed. Work it out champ.</li>\n</ol>\n<h2 id=\"STEP-2-–-Knowing-what-“Game-Developers”-do\"><a href=\"#STEP-2-–-Knowing-what-“Game-Developers”-do\" class=\"headerlink\" title=\"[ STEP 2 ] – Knowing what “Game Developers” do\"></a>[ STEP 2 ] – Knowing what “Game Developers” do</h2><p>Wikipedia quotes:</p>\n<blockquote>\n<p>Video game development is the process of creating a video game. Development is undertaken by a game developer, which may range from a single person to a large business. …</p>\n</blockquote>\n<p>Clearly this is way too simple for beginners to catch. So I am gonna run through very basic work each team needs to carry out :<br><strong>Video Game Developers</strong> (Devs) are those people who write bunch of codes (respectfully, program) for a game software in or out of a company.<br><strong>Artists</strong> make gun models and bullet colours. Developers make it possible for the players to fire a bullet out of a gun.<br><strong>Designer</strong>, however, work between them and set up the rules of how fast the player can fire bullets.</p>\n<p>The mainstream people have always gone to become a Game Designer by following the path of either a Game Artist or a Game Developer and excelling at it. This is purely for fallback and guidance purpose. You are free to roam around and find your own ways of achieving it.<br>So, the bottom line is, you need to know how to program. Although there are some products in the market who claim to produce games “without programming”, I would recommend against them as they will only slow you down. I am not saying they are bad and all but, there does exist fast and effective approaches than using <em>GameMaker</em> kind of products.</p>\n<p>Also, do not get tempted to freeze yourself with C++ as you might have heard that pro game developers in industries use only C++. Its a fact. Starting out with C++ will surely teach you many facets and make you technically very strong. But then again, there does exist fast and effective approaches than using hardcore beasts like C++.</p>\n<h2 id=\"STEP-3-–-Understanding-under-the-hood\"><a href=\"#STEP-3-–-Understanding-under-the-hood\" class=\"headerlink\" title=\"[ STEP 3 ] – Understanding under-the-hood\"></a>[ STEP 3 ] – Understanding under-the-hood</h2><h3 id=\"The-Problem\"><a href=\"#The-Problem\" class=\"headerlink\" title=\"The Problem\"></a>The Problem</h3><p>Some learn from text books, some from practical implementations, some from Audio-Video and Interaction. The problem is, the way of understanding and acquiring knowledge is not same and consistent for everyone.</p>\n<h3 id=\"Blog-to-the-rescue\"><a href=\"#Blog-to-the-rescue\" class=\"headerlink\" title=\"Blog to the rescue\"></a>Blog to the rescue</h3><p>Although, a fact still remains a fact for everyone. So, instead of shedding different versions of perspective over a single thing, lets think tactically and try to acquire knowledge based on patterns, guidelines and real-time implementations.</p>\n<p>This article and/or blog is way too immature to be used as a text book. Just read it whenever you feel you want to know something more. And obviously, do practice it along with because Game programming is more of a practical thing, than mere theory.</p>\n<p>You do need some basic understanding of certain things before starting out. Please review the chapters and get yourself acquainted with specified topics as it will be mentioned in the following chapters.</p>\n<h2 id=\"STEP-4-–-All-Hammers-and-Nails\"><a href=\"#STEP-4-–-All-Hammers-and-Nails\" class=\"headerlink\" title=\"[ STEP 4 ] – All Hammers and Nails\"></a>[ STEP 4 ] – All Hammers and Nails</h2><h3 id=\"Game-Art\"><a href=\"#Game-Art\" class=\"headerlink\" title=\"Game Art:\"></a>Game Art:</h3><ul>\n<li>Blender / 3DS MAX</li>\n<li>Adobe Photoshop</li>\n<li>Adobe After Effects (For Post Production)</li>\n<li>ZBrush</li>\n</ul>\n<h3 id=\"Game-Programming\"><a href=\"#Game-Programming\" class=\"headerlink\" title=\"Game Programming:\"></a>Game Programming:</h3><ul>\n<li>Combo 1: Visual C++ with DirectX 11</li>\n<li>Combo 2: Visual C++ with IrrLicht/ Ogre3D engine</li>\n<li>Combo 3: <del>Visual C# with SlimDx</del> (Discontinued)</li>\n<li>Combo 4: Visual C++ with OpenGL</li>\n<li>Combo 5: Java with openGL</li>\n<li>Combo 6: Unity3D with C#</li>\n<li>Combo 7: Unreal Engine, Blueprint</li>\n<li>… many more</li>\n</ul>\n<p>There are so many of ‘em</p>\n<p>IMHO, there are way more combo than you can imagine. You don’t need to worry about that. My Main focus will be on Unity, Unreal Engine, C++  and DirectX. Although I would introduce other software just for the sake of comparison and  introductory knowledge.</p>\n<h2 id=\"STEP-5-–-Get-Down’-and-Dirty\"><a href=\"#STEP-5-–-Get-Down’-and-Dirty\" class=\"headerlink\" title=\"[ STEP 5 ] – Get Down’ and Dirty\"></a>[ STEP 5 ] – Get Down’ and Dirty</h2><h3 id=\"Why-DirectX-Isn’t-OpenGL-easier\"><a href=\"#Why-DirectX-Isn’t-OpenGL-easier\" class=\"headerlink\" title=\"Why DirectX? Isn’t OpenGL easier?\"></a>Why DirectX? Isn’t OpenGL easier?</h3><p>I really don’t want to get in the religious debate between whether to choose DirectX or OpenGL. I really feel each has its own advantage and disadvantage. If you are more like an OpenGL person, I would recommend  you to come to this site later as I will be adding OpenGL tuts also. If you want to compare both of them, do it here.<br>And for everyone else who want to row the DirectX boat, lets get started to the amazing adventure, Lets Rock! <code>\\m/</code></p>\n<p><img src=\"https://upload.wikimedia.org/wikipedia/en/0/01/Directx9.png\" alt=\"\"></p>\n<h3 id=\"Wait-what-the-heck-is-this-DirectX-and-OpenGL-and-all-those-things\"><a href=\"#Wait-what-the-heck-is-this-DirectX-and-OpenGL-and-all-those-things\" class=\"headerlink\" title=\"Wait, what the heck is this DirectX and OpenGL and all those things?\"></a>Wait, what the heck is this DirectX and OpenGL and all those things?</h3><p>Hmm, if everything above looks alien to you, don’t panic. If you don’t know these but surely have heard of these and it is exciting your blood cells then, congratulate yourself, you do have game development in your gene.<br><em>Direct Answer</em>: DirectX (Direct3D) and OpenGL are two of the most popular Graphics APIs that help you to build amazingly super cool games. DirectX is a proprietary software by Microsoft an OpenGL is an open source library maintained by Silicon Graphics. DirectX SDK (Software Development Kit) contains many APIs ( Application Programming Interface ) such as – Direct3D, XACT3, DirectInput, etc.</p>\n<h3 id=\"Seriously-what-are-these-things-You-are-freaking-me-out\"><a href=\"#Seriously-what-are-these-things-You-are-freaking-me-out\" class=\"headerlink\" title=\"Seriously, what are these things? You are freaking me out!\"></a>Seriously, what are these things? You are freaking me out!</h3><p>Think of it as a collection of small building blocks. We place each of them on top of the other to make a big castle. It doesn’t matter what color you choose (DirectX or OpenGL), what matters is your game logic. Keep Rocking <code>\\m/</code>.</p>\n<h3 id=\"Am-I-eligible-to-learn-these-stuff\"><a href=\"#Am-I-eligible-to-learn-these-stuff\" class=\"headerlink\" title=\"Am I eligible to learn these stuff?\"></a>Am I eligible to learn these stuff?</h3><p>Any one with the passion of making games is eligible. All the posts here are written keeping in mind that the reader is novice.<br>Since DirectX and OpenGL are advanced topics, it is recommended that the user knows the basics of C++ programming language like – Classes and Objects, Inheritance, Pointers etc. Posts requiring this stuff will also have a reference to a crash course. Still, Basic knowledge about C++ is highly recommended. Want to learn now – Go <a href=\"http://www.cprogramming.com/tutorial/lesson1.html\">here</a>.</p>\n<h3 id=\"Sources-of-this-blog\"><a href=\"#Sources-of-this-blog\" class=\"headerlink\" title=\"Sources of this blog\"></a>Sources of this blog</h3><p>One source is never enough. Admit it. Plus, using multiple sources lets you gain in-depth knowledge in a very reliable and easy way. I have tried to compile all the sources in to a very simple and easy manner. List of Sources:</p>\n<ul>\n<li><a href=\"http://www.directxtutorial.com/Tutorial11/tutorials.aspx\">DirectX Tutorial</a></li>\n<li><a href=\"http://www.rastertek.com/tutdx11.html\">RasterTek DirectX 11</a></li>\n<li><a href=\"http://www.amazon.com/Beginning-DirectX-11-Game-Programming/dp/1435458958/ref=sr_1_2?ie=UTF8&amp;qid=1347447743&amp;sr=8-2&amp;keywords=directX+11+Game+Programming\">Beginning DirectX 11 Game Programming (by Allen and Wendy)</a></li>\n<li><a href=\"http://www.microsoft.com/en-in/download/confirmation.aspx?id=6812\">DirectX SDK June 2010 Documentation and Samples</a></li>\n<li><a href=\"http://www.gamedev.net/\">GameDev.net</a></li>\n<li><a href=\"http://www.toymaker.info/Games/index.html\">ToyMaker.info</a></li>\n<li>Some cool friends who already know Dx</li>\n</ul>\n<h2 id=\"STEP-6-–-Lets-get-started\"><a href=\"#STEP-6-–-Lets-get-started\" class=\"headerlink\" title=\"[ STEP 6 ] – Lets get started\"></a>[ STEP 6 ] – Lets get started</h2><p>So now that you have a somewhat clear idea about making games, start small, and be ready to fail. In the next post, we will start with basic comparison, selection and configuration of different tools, install them and review their alternatives and explore more and more resources.<br>We will take a peek on conversation among high profile game developers and great people in the game Industries to motivate yourself.<br>Also, we will learn something good about being healthy.<br>So prepare yourself – mentally, physically, technically and psychologically and every damn-ally. You are going to fight, compete and also contribute to the world of Gaming and it’s Development. I wish you all the luck.</p>\n<h2 id=\"Homework-–-No-you-are-not-escaping-this-time-…\"><a href=\"#Homework-–-No-you-are-not-escaping-this-time-…\" class=\"headerlink\" title=\"[ Homework ] – No, you are not escaping this time …\"></a>[ Homework ] – No, you are not escaping this time …</h2><p>For starters, read along these pages for a reference. Feel free to choose any of them.</p>\n<ul>\n<li><a href=\"http://www.gamefromscratch.com/post/2011/08/04/I-want-to-be-a-game-developer.aspx\">I want to be a game developer</a></li>\n<li><a href=\"http://kotaku.com/5979539/a-beginners-guide-to-making-your-first-video-game\">A Beginner’s Guide To Making Your First Video Game</a></li>\n<li><a href=\"http://www.wikihow.com/Become-a-Video-Game-Programmer\">How to Become a Video Game Programmer</a></li>\n<li><a href=\"http://www.fastgraph.com/makegames/chapt1.html\">Do You Have What it Takes to Be a Game Developer?</a></li>\n<li><a href=\"http://www.gamasutra.com/blogs/TerryWilson/20130822/198823/Myths_around_the_Game_Development_Industry.php\">Myths around the Game Development Industry</a></li>\n</ul>\n<h2 id=\"Suggestions-Feedback-Criticism\"><a href=\"#Suggestions-Feedback-Criticism\" class=\"headerlink\" title=\"[ Suggestions / Feedback / Criticism: ]\"></a>[ Suggestions / Feedback / Criticism: ]</h2><p>I am open to criticism and feedbacks. If you feel that I have caught a different path somewhere in my article, feel free to contact me. If you want me to write an article concerning a very important topic, please use the forum or email me. All your feedback and suggestions are highly appreciated. Thanks.</p>\n<p>I hope I could throw some light on how to have a career as  a game developer.</p>\n<h2 id=\"Disclaimer\"><a href=\"#Disclaimer\" class=\"headerlink\" title=\"[ Disclaimer: ]\"></a>[ Disclaimer: ]</h2><p>All images used are copyrighted material. DirectX is Licensed under Microsoft.</p>\n"},{"title":"Lifesaver tools and scripts","date":"2014-08-05T18:24:33.000Z","_content":"\n# Lifesaver tools and scripts\n\nHere are some cool and “must-have” tools, scripts, and Lifesaver plugins that will save your from pulling your hairs out. All of these are FREE.\n\n1. Frame Per Second\n\tIf you are using Unity’s FPS to track and manage the game, think again. Use [this script](http://wiki.unity3d.com/index.php?title=FramesPerSecond) to see REAL FPS counter.\n\n2. Finite State Machine\n\tEvery good programmer uses a state machine solution to avoid code complexity and re-use code in a structured way. So far, the [best Finite State Machine Solution](https://github.com/thefuntastic/Unity3d-Finite-State-Machine) I have got. You could be interested in [uTool](https://bitbucket.org/skipbits/_unity) plugin as well which has integrated State Machine Features\n\n3. Directory Contents to Text File\n\tIn Windows, if you want to print all the contents of a directory ( may be, recursively?) to an external text file, do so by the tree command. Hold Shift and Right Click the directory you want to print, click on Open Command Window here and paste this code and press enter.  \n\t` tree /F /A > contents.txt `\n\n\tThe `/F` Flag prints the file names, and `/A` flag disables extended ASCII printing.  \n\tIMHO, this should have topped the Lifesaver tools and scripts list.\n\n4. ~~In-App Purchase, Social Profile, Rewards~~ *This has been discontinued*. \n\tRecently I stumbled upon a great open-source framework for unity: Soomla.  \n\t*Soomla offers :*  \n\tStore : The one-go IAP Package for all the virtual currency management\n\tLevel Up : Game Progression with ease.\n\tGrow : Community driven analytic and data sharing\n\tProfile: Social Profile for your players – Facebook Status, Twitter Bragging, etc.\n\tThe best thing about this is that the whole package is open-source and you can use them as long as you want, modify them as you wish.\n\n5. Shaders  \n\tShaders contain code that defines what kind of properties and assets to use. A Shader basically defines a formula for how the in-game shading should look. Shaders are meant to be written by graphics programmers. They are created using the ShaderLab language, which is quite simple. For a quick view, these are the most used ones:  \n\t- [Transparent Single Color Shader](http://wiki.unity3d.com/index.php/Transparent_Single_Color_Shader)\n\t- [Toon Shadowed Shader](http://wiki.unity3d.com/index.php/ToonShadowed)\n\t- [Outlined Diffuse Shader](http://wiki.unity3d.com/index.php/OutlinedDiffuse)\n\t- [Quick and Easy Toon Shader from Asset Store](https://www.assetstore.unity3d.com/#/content/3926)  \n\n6. Input and Touches\n\tPrime31 does offer a good touch solution but if you are looking for more intuitive and all-in-one touch solutions, you have to look at [TouchScript](https://github.com/InteractiveLab/TouchScript) .\n\t\t+ Good Documentation\n\t\t+ Demo Tutorials  \n\t\t+ Comparatively Easy and Fast  \n\t\t+ Many Projects are using them   \n7. Tweening\n\tTo the point iTween is considered the defacto for tweening in Unity Systems , I found [DOTween](http://dotween.demigiant.com/).  \n\tIs really Fast ( and I mean REALLY), fuly optimized for C# and works great on every device.  \n\tAnother one of the neat Lifesaver tools and scripts for unity to strap under your belt.","source":"_posts/Lifesaver-tools-and-scripts.md","raw":"---\ntitle: Lifesaver tools and scripts\ndate: 2014-08-05 23:54:33\ntags:\n- plugins\n- scripts \n- tools\n- tricks\ncategory: Game Development\n---\n\n# Lifesaver tools and scripts\n\nHere are some cool and “must-have” tools, scripts, and Lifesaver plugins that will save your from pulling your hairs out. All of these are FREE.\n\n1. Frame Per Second\n\tIf you are using Unity’s FPS to track and manage the game, think again. Use [this script](http://wiki.unity3d.com/index.php?title=FramesPerSecond) to see REAL FPS counter.\n\n2. Finite State Machine\n\tEvery good programmer uses a state machine solution to avoid code complexity and re-use code in a structured way. So far, the [best Finite State Machine Solution](https://github.com/thefuntastic/Unity3d-Finite-State-Machine) I have got. You could be interested in [uTool](https://bitbucket.org/skipbits/_unity) plugin as well which has integrated State Machine Features\n\n3. Directory Contents to Text File\n\tIn Windows, if you want to print all the contents of a directory ( may be, recursively?) to an external text file, do so by the tree command. Hold Shift and Right Click the directory you want to print, click on Open Command Window here and paste this code and press enter.  \n\t` tree /F /A > contents.txt `\n\n\tThe `/F` Flag prints the file names, and `/A` flag disables extended ASCII printing.  \n\tIMHO, this should have topped the Lifesaver tools and scripts list.\n\n4. ~~In-App Purchase, Social Profile, Rewards~~ *This has been discontinued*. \n\tRecently I stumbled upon a great open-source framework for unity: Soomla.  \n\t*Soomla offers :*  \n\tStore : The one-go IAP Package for all the virtual currency management\n\tLevel Up : Game Progression with ease.\n\tGrow : Community driven analytic and data sharing\n\tProfile: Social Profile for your players – Facebook Status, Twitter Bragging, etc.\n\tThe best thing about this is that the whole package is open-source and you can use them as long as you want, modify them as you wish.\n\n5. Shaders  \n\tShaders contain code that defines what kind of properties and assets to use. A Shader basically defines a formula for how the in-game shading should look. Shaders are meant to be written by graphics programmers. They are created using the ShaderLab language, which is quite simple. For a quick view, these are the most used ones:  \n\t- [Transparent Single Color Shader](http://wiki.unity3d.com/index.php/Transparent_Single_Color_Shader)\n\t- [Toon Shadowed Shader](http://wiki.unity3d.com/index.php/ToonShadowed)\n\t- [Outlined Diffuse Shader](http://wiki.unity3d.com/index.php/OutlinedDiffuse)\n\t- [Quick and Easy Toon Shader from Asset Store](https://www.assetstore.unity3d.com/#/content/3926)  \n\n6. Input and Touches\n\tPrime31 does offer a good touch solution but if you are looking for more intuitive and all-in-one touch solutions, you have to look at [TouchScript](https://github.com/InteractiveLab/TouchScript) .\n\t\t+ Good Documentation\n\t\t+ Demo Tutorials  \n\t\t+ Comparatively Easy and Fast  \n\t\t+ Many Projects are using them   \n7. Tweening\n\tTo the point iTween is considered the defacto for tweening in Unity Systems , I found [DOTween](http://dotween.demigiant.com/).  \n\tIs really Fast ( and I mean REALLY), fuly optimized for C# and works great on every device.  \n\tAnother one of the neat Lifesaver tools and scripts for unity to strap under your belt.","slug":"Lifesaver-tools-and-scripts","published":1,"updated":"2017-01-11T18:39:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cixtbxhuw0006tavzjujrops2","content":"<h1 id=\"Lifesaver-tools-and-scripts\"><a href=\"#Lifesaver-tools-and-scripts\" class=\"headerlink\" title=\"Lifesaver tools and scripts\"></a>Lifesaver tools and scripts</h1><p>Here are some cool and “must-have” tools, scripts, and Lifesaver plugins that will save your from pulling your hairs out. All of these are FREE.</p>\n<ol>\n<li><p>Frame Per Second<br> If you are using Unity’s FPS to track and manage the game, think again. Use <a href=\"http://wiki.unity3d.com/index.php?title=FramesPerSecond\" target=\"_blank\" rel=\"external\">this script</a> to see REAL FPS counter.</p>\n</li>\n<li><p>Finite State Machine<br> Every good programmer uses a state machine solution to avoid code complexity and re-use code in a structured way. So far, the <a href=\"https://github.com/thefuntastic/Unity3d-Finite-State-Machine\" target=\"_blank\" rel=\"external\">best Finite State Machine Solution</a> I have got. You could be interested in <a href=\"https://bitbucket.org/skipbits/_unity\" target=\"_blank\" rel=\"external\">uTool</a> plugin as well which has integrated State Machine Features</p>\n</li>\n<li><p>Directory Contents to Text File<br> In Windows, if you want to print all the contents of a directory ( may be, recursively?) to an external text file, do so by the tree command. Hold Shift and Right Click the directory you want to print, click on Open Command Window here and paste this code and press enter.<br> <code>tree /F /A &gt; contents.txt</code></p>\n<p> The <code>/F</code> Flag prints the file names, and <code>/A</code> flag disables extended ASCII printing.<br> IMHO, this should have topped the Lifesaver tools and scripts list.</p>\n</li>\n<li><p><del>In-App Purchase, Social Profile, Rewards</del> <em>This has been discontinued</em>.<br> Recently I stumbled upon a great open-source framework for unity: Soomla.<br> <em>Soomla offers :</em><br> Store : The one-go IAP Package for all the virtual currency management<br> Level Up : Game Progression with ease.<br> Grow : Community driven analytic and data sharing<br> Profile: Social Profile for your players – Facebook Status, Twitter Bragging, etc.<br> The best thing about this is that the whole package is open-source and you can use them as long as you want, modify them as you wish.</p>\n</li>\n<li><p>Shaders<br> Shaders contain code that defines what kind of properties and assets to use. A Shader basically defines a formula for how the in-game shading should look. Shaders are meant to be written by graphics programmers. They are created using the ShaderLab language, which is quite simple. For a quick view, these are the most used ones:  </p>\n<ul>\n<li><a href=\"http://wiki.unity3d.com/index.php/Transparent_Single_Color_Shader\" target=\"_blank\" rel=\"external\">Transparent Single Color Shader</a></li>\n<li><a href=\"http://wiki.unity3d.com/index.php/ToonShadowed\" target=\"_blank\" rel=\"external\">Toon Shadowed Shader</a></li>\n<li><a href=\"http://wiki.unity3d.com/index.php/OutlinedDiffuse\" target=\"_blank\" rel=\"external\">Outlined Diffuse Shader</a></li>\n<li><a href=\"https://www.assetstore.unity3d.com/#/content/3926\" target=\"_blank\" rel=\"external\">Quick and Easy Toon Shader from Asset Store</a>  </li>\n</ul>\n</li>\n<li><p>Input and Touches<br> Prime31 does offer a good touch solution but if you are looking for more intuitive and all-in-one touch solutions, you have to look at <a href=\"https://github.com/InteractiveLab/TouchScript\" target=\"_blank\" rel=\"external\">TouchScript</a> .</p>\n<pre><code>+ Good Documentation\n+ Demo Tutorials  \n+ Comparatively Easy and Fast  \n+ Many Projects are using them   \n</code></pre></li>\n<li>Tweening<br> To the point iTween is considered the defacto for tweening in Unity Systems , I found <a href=\"http://dotween.demigiant.com/\" target=\"_blank\" rel=\"external\">DOTween</a>.<br> Is really Fast ( and I mean REALLY), fuly optimized for C# and works great on every device.<br> Another one of the neat Lifesaver tools and scripts for unity to strap under your belt.</li>\n</ol>\n","excerpt":"","more":"<h1 id=\"Lifesaver-tools-and-scripts\"><a href=\"#Lifesaver-tools-and-scripts\" class=\"headerlink\" title=\"Lifesaver tools and scripts\"></a>Lifesaver tools and scripts</h1><p>Here are some cool and “must-have” tools, scripts, and Lifesaver plugins that will save your from pulling your hairs out. All of these are FREE.</p>\n<ol>\n<li><p>Frame Per Second<br> If you are using Unity’s FPS to track and manage the game, think again. Use <a href=\"http://wiki.unity3d.com/index.php?title=FramesPerSecond\">this script</a> to see REAL FPS counter.</p>\n</li>\n<li><p>Finite State Machine<br> Every good programmer uses a state machine solution to avoid code complexity and re-use code in a structured way. So far, the <a href=\"https://github.com/thefuntastic/Unity3d-Finite-State-Machine\">best Finite State Machine Solution</a> I have got. You could be interested in <a href=\"https://bitbucket.org/skipbits/_unity\">uTool</a> plugin as well which has integrated State Machine Features</p>\n</li>\n<li><p>Directory Contents to Text File<br> In Windows, if you want to print all the contents of a directory ( may be, recursively?) to an external text file, do so by the tree command. Hold Shift and Right Click the directory you want to print, click on Open Command Window here and paste this code and press enter.<br> <code>tree /F /A &gt; contents.txt</code></p>\n<p> The <code>/F</code> Flag prints the file names, and <code>/A</code> flag disables extended ASCII printing.<br> IMHO, this should have topped the Lifesaver tools and scripts list.</p>\n</li>\n<li><p><del>In-App Purchase, Social Profile, Rewards</del> <em>This has been discontinued</em>.<br> Recently I stumbled upon a great open-source framework for unity: Soomla.<br> <em>Soomla offers :</em><br> Store : The one-go IAP Package for all the virtual currency management<br> Level Up : Game Progression with ease.<br> Grow : Community driven analytic and data sharing<br> Profile: Social Profile for your players – Facebook Status, Twitter Bragging, etc.<br> The best thing about this is that the whole package is open-source and you can use them as long as you want, modify them as you wish.</p>\n</li>\n<li><p>Shaders<br> Shaders contain code that defines what kind of properties and assets to use. A Shader basically defines a formula for how the in-game shading should look. Shaders are meant to be written by graphics programmers. They are created using the ShaderLab language, which is quite simple. For a quick view, these are the most used ones:  </p>\n<ul>\n<li><a href=\"http://wiki.unity3d.com/index.php/Transparent_Single_Color_Shader\">Transparent Single Color Shader</a></li>\n<li><a href=\"http://wiki.unity3d.com/index.php/ToonShadowed\">Toon Shadowed Shader</a></li>\n<li><a href=\"http://wiki.unity3d.com/index.php/OutlinedDiffuse\">Outlined Diffuse Shader</a></li>\n<li><a href=\"https://www.assetstore.unity3d.com/#/content/3926\">Quick and Easy Toon Shader from Asset Store</a>  </li>\n</ul>\n</li>\n<li><p>Input and Touches<br> Prime31 does offer a good touch solution but if you are looking for more intuitive and all-in-one touch solutions, you have to look at <a href=\"https://github.com/InteractiveLab/TouchScript\">TouchScript</a> .</p>\n<pre><code>+ Good Documentation\n+ Demo Tutorials  \n+ Comparatively Easy and Fast  \n+ Many Projects are using them   \n</code></pre></li>\n<li>Tweening<br> To the point iTween is considered the defacto for tweening in Unity Systems , I found <a href=\"http://dotween.demigiant.com/\">DOTween</a>.<br> Is really Fast ( and I mean REALLY), fuly optimized for C# and works great on every device.<br> Another one of the neat Lifesaver tools and scripts for unity to strap under your belt.</li>\n</ol>\n"},{"title":"Move a GameObject relative to its facing direction in Unity","date":"2014-05-31T18:30:00.000Z","_content":"\n\n# The Scenario\n\nGenerally in a game where the player has to move a gameobject (Central character, RPG, Hero, etc.) as he progresses. Now, assuming the game to be non-unidirectional, many people (including me) face the problem of making the gameobject move relative to its facing direction.\n\n\nIf the game is such that the player can simultaneously move on x and z direction, you can independently setup the movement physics code. Turning around would be used by the mouse itself so you just need to setup a mouse-look script on the camera. Here the Turning around is a continuous task (e.g. Crysis, COD, Project IGI).\n\ne.g.\n```\n//Moving Forward\n rigidbody.AddForce(Vector3.forward* Input.GetAxis(“Vertical”)*400);\n\n//Turning Around\nrigidbody.AddForce(Vector3.right* Input.GetAxis(“Horizontal”)*400);\n```\nBut there may be a problem if you want to make a game where the mouse-look isn’t really needed and the turning happens discretely by user input and based on the direction the player is facing, he is needed to move forward (e.g. Temple Run).\n\n \n\n# The Solution\n\nNow you can either use global variables to keep reference of the direction the player gameObject is facing, or use simple and more natural logic to move it, using the following scripts.\n\n## Case I\n\nIf you are manipulating the position directly, you can move a gameobject relative to its facing direction by using transform.forward instead of Vector3.forward in the scripting.\n\ne.g.\n```\ntransform.position=Vector3.Lerp(transform.position,transform.forward,Time.deltaTime);\n```\n\n### Case II\n\nIf your code is using physics, use rigidbody.AddRelativeForce rather than rigidbody.AddForce\n\ne.g.\n\n```\nrigidbody.AddRelativeForce(Vector3.forward*30);\n``` \n\n### Note\n\nThe scripts are intended for 3D Environment. But changing them for 2D is easy. I will try to provide 2D examples too if I find suitable time.","source":"_posts/Move-a-GameObject-relative-to-its-facing-direction-in-Unity.md","raw":"---\ntitle: Move a GameObject relative to its facing direction in Unity\ntags: \n- movement\n- transform\n- unity3d\n- unity\n- physics\n- rigidbody\n- C#\ncategory: Game Development\ndate: 2014-06-01 \n---\n\n\n# The Scenario\n\nGenerally in a game where the player has to move a gameobject (Central character, RPG, Hero, etc.) as he progresses. Now, assuming the game to be non-unidirectional, many people (including me) face the problem of making the gameobject move relative to its facing direction.\n\n\nIf the game is such that the player can simultaneously move on x and z direction, you can independently setup the movement physics code. Turning around would be used by the mouse itself so you just need to setup a mouse-look script on the camera. Here the Turning around is a continuous task (e.g. Crysis, COD, Project IGI).\n\ne.g.\n```\n//Moving Forward\n rigidbody.AddForce(Vector3.forward* Input.GetAxis(“Vertical”)*400);\n\n//Turning Around\nrigidbody.AddForce(Vector3.right* Input.GetAxis(“Horizontal”)*400);\n```\nBut there may be a problem if you want to make a game where the mouse-look isn’t really needed and the turning happens discretely by user input and based on the direction the player is facing, he is needed to move forward (e.g. Temple Run).\n\n \n\n# The Solution\n\nNow you can either use global variables to keep reference of the direction the player gameObject is facing, or use simple and more natural logic to move it, using the following scripts.\n\n## Case I\n\nIf you are manipulating the position directly, you can move a gameobject relative to its facing direction by using transform.forward instead of Vector3.forward in the scripting.\n\ne.g.\n```\ntransform.position=Vector3.Lerp(transform.position,transform.forward,Time.deltaTime);\n```\n\n### Case II\n\nIf your code is using physics, use rigidbody.AddRelativeForce rather than rigidbody.AddForce\n\ne.g.\n\n```\nrigidbody.AddRelativeForce(Vector3.forward*30);\n``` \n\n### Note\n\nThe scripts are intended for 3D Environment. But changing them for 2D is easy. I will try to provide 2D examples too if I find suitable time.","slug":"Move-a-GameObject-relative-to-its-facing-direction-in-Unity","published":1,"updated":"2017-01-08T22:41:19.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cixtbxhuz0009tavzunxqdzhe","content":"<h1 id=\"The-Scenario\"><a href=\"#The-Scenario\" class=\"headerlink\" title=\"The Scenario\"></a>The Scenario</h1><p>Generally in a game where the player has to move a gameobject (Central character, RPG, Hero, etc.) as he progresses. Now, assuming the game to be non-unidirectional, many people (including me) face the problem of making the gameobject move relative to its facing direction.</p>\n<p>If the game is such that the player can simultaneously move on x and z direction, you can independently setup the movement physics code. Turning around would be used by the mouse itself so you just need to setup a mouse-look script on the camera. Here the Turning around is a continuous task (e.g. Crysis, COD, Project IGI).</p>\n<p>e.g.<br><figure class=\"highlight mathematica\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">//Moving <span class=\"keyword\">Forward</span></div><div class=\"line\"> rigidbody.AddForce(Vector3.forward* <span class=\"keyword\">Input</span>.GetAxis(“<span class=\"keyword\">Vertical</span>”)*<span class=\"number\">400</span>);</div><div class=\"line\"></div><div class=\"line\">//Turning Around</div><div class=\"line\">rigidbody.AddForce(Vector3.right* <span class=\"keyword\">Input</span>.GetAxis(“<span class=\"keyword\">Horizontal</span>”)*<span class=\"number\">400</span>);</div></pre></td></tr></table></figure></p>\n<p>But there may be a problem if you want to make a game where the mouse-look isn’t really needed and the turning happens discretely by user input and based on the direction the player is facing, he is needed to move forward (e.g. Temple Run).</p>\n<h1 id=\"The-Solution\"><a href=\"#The-Solution\" class=\"headerlink\" title=\"The Solution\"></a>The Solution</h1><p>Now you can either use global variables to keep reference of the direction the player gameObject is facing, or use simple and more natural logic to move it, using the following scripts.</p>\n<h2 id=\"Case-I\"><a href=\"#Case-I\" class=\"headerlink\" title=\"Case I\"></a>Case I</h2><p>If you are manipulating the position directly, you can move a gameobject relative to its facing direction by using transform.forward instead of Vector3.forward in the scripting.</p>\n<p>e.g.<br><figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">transform</span>.<span class=\"built_in\">position</span>=Vector3.Lerp(<span class=\"built_in\">transform</span>.<span class=\"built_in\">position</span>,<span class=\"built_in\">transform</span>.forward,Time.deltaTime);</div></pre></td></tr></table></figure></p>\n<h3 id=\"Case-II\"><a href=\"#Case-II\" class=\"headerlink\" title=\"Case II\"></a>Case II</h3><p>If your code is using physics, use rigidbody.AddRelativeForce rather than rigidbody.AddForce</p>\n<p>e.g.</p>\n<pre><code>rigidbody.AddRelativeForce(Vector3.forward*30);\n</code></pre><h3 id=\"Note\"><a href=\"#Note\" class=\"headerlink\" title=\"Note\"></a>Note</h3><p>The scripts are intended for 3D Environment. But changing them for 2D is easy. I will try to provide 2D examples too if I find suitable time.</p>\n","excerpt":"","more":"<h1 id=\"The-Scenario\"><a href=\"#The-Scenario\" class=\"headerlink\" title=\"The Scenario\"></a>The Scenario</h1><p>Generally in a game where the player has to move a gameobject (Central character, RPG, Hero, etc.) as he progresses. Now, assuming the game to be non-unidirectional, many people (including me) face the problem of making the gameobject move relative to its facing direction.</p>\n<p>If the game is such that the player can simultaneously move on x and z direction, you can independently setup the movement physics code. Turning around would be used by the mouse itself so you just need to setup a mouse-look script on the camera. Here the Turning around is a continuous task (e.g. Crysis, COD, Project IGI).</p>\n<p>e.g.<br><figure class=\"highlight mathematica\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">//Moving <span class=\"keyword\">Forward</span></div><div class=\"line\"> rigidbody.AddForce(Vector3.forward* <span class=\"keyword\">Input</span>.GetAxis(“<span class=\"keyword\">Vertical</span>”)*<span class=\"number\">400</span>);</div><div class=\"line\"></div><div class=\"line\">//Turning Around</div><div class=\"line\">rigidbody.AddForce(Vector3.right* <span class=\"keyword\">Input</span>.GetAxis(“<span class=\"keyword\">Horizontal</span>”)*<span class=\"number\">400</span>);</div></pre></td></tr></table></figure></p>\n<p>But there may be a problem if you want to make a game where the mouse-look isn’t really needed and the turning happens discretely by user input and based on the direction the player is facing, he is needed to move forward (e.g. Temple Run).</p>\n<h1 id=\"The-Solution\"><a href=\"#The-Solution\" class=\"headerlink\" title=\"The Solution\"></a>The Solution</h1><p>Now you can either use global variables to keep reference of the direction the player gameObject is facing, or use simple and more natural logic to move it, using the following scripts.</p>\n<h2 id=\"Case-I\"><a href=\"#Case-I\" class=\"headerlink\" title=\"Case I\"></a>Case I</h2><p>If you are manipulating the position directly, you can move a gameobject relative to its facing direction by using transform.forward instead of Vector3.forward in the scripting.</p>\n<p>e.g.<br><figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">transform</span>.<span class=\"built_in\">position</span>=Vector3.Lerp(<span class=\"built_in\">transform</span>.<span class=\"built_in\">position</span>,<span class=\"built_in\">transform</span>.forward,Time.deltaTime);</div></pre></td></tr></table></figure></p>\n<h3 id=\"Case-II\"><a href=\"#Case-II\" class=\"headerlink\" title=\"Case II\"></a>Case II</h3><p>If your code is using physics, use rigidbody.AddRelativeForce rather than rigidbody.AddForce</p>\n<p>e.g.</p>\n<pre><code>rigidbody.AddRelativeForce(Vector3.forward*30);\n</code></pre><h3 id=\"Note\"><a href=\"#Note\" class=\"headerlink\" title=\"Note\"></a>Note</h3><p>The scripts are intended for 3D Environment. But changing them for 2D is easy. I will try to provide 2D examples too if I find suitable time.</p>\n"},{"title":"Why work in Game Industry when IT companies pay better?","date":"2014-06-04T18:30:00.000Z","updated":"2017-01-08T18:30:00.000Z","_content":"\n# Why work in Game Industry when IT Companies pay better?\n\nA very interesting, and yet, disappointing question revolves me around by many friends, friends of friends, and strangers – “Why would I work in a Game Industry when IT companies are paying me better?“.\n\nBefore even starting this article, I would like to highlight the fact that Game Industry doesn’t consists of only Programmers and Testers. Artists create assets and they themselves are unavoidable and priceless assets.\n\nAnd then, there are many more people who are deeply associated to the game industry – Musicians, Production team, FX team, Design (not limited to UI) team, and QA people, and many more. So, speaking exclusively about programmers in context of the question about Game Industry will be somewhat biased, partial and incomplete. However, for the sake of specific discussion, I assume that this question was asked by a group of people belonging to Mainstream Programming in IT industry and thinking about Game Industry as an alternative.\n\nSo, coming back to the question – why work in a game industry when IT companies pay better?\n\n1. If you really **are** passionate about making things what you and others enjoy playing, you wouldn't ask this question at first point. If you are okay earning money through what-so-ever way, you may want to reconsider reading this blog further `:P`. IMHO, companies in Game Industries won’t hire you if you have just played a couple of games and think, “it’ll be cool to work there”. \n2. You must play at-least that much that it compels you to think, “How did they make that s***” or “I wish someday I will grab a game title in a local game store that has my code written on it“. If you are even getting close to what I am trying to say, then my friend, you would NEVER EVER ask this question.\n3. Another way of looking at this could be - It depends on how much you are ready to commit to yourself about making games. *High pays are not always the best rewards you can get out of your work.* Indie Game developers keep making games no matter what. They fail a hundred times. Sometimes the art is not good enough, sometimes, the gameplay sucks, or sometimes, some crazy a$$ guy decides to leave the team in middle and flies off. But, the next day, the guys get up and start coding again! \n4. And, if you end up in big gates like EA, Activision, Criterion Studios, UbiSoft, Zynga, etc, the pay is way cooler than other software engineering disciplines.\n5. Oh and lastly, you may start with small pay, grow gradually, and end up having a lavish salary and the joy in your heart of entertaining others.\n\nMarc Mencer says, ” there does seem to be a lower average salary for programmers in the game industry when compared with business programmers from equal positions of experience and education. If that is the case, why would anyone want to work for less money doing the same job?\n\nThe truth of the matter is that, while the skill of programming may be the same or similar, the jobs are completely different. On a game project, you have a good time working on a piece of entertainment. You also have more liberal hours and you don’t have to wear a suit to work. The bottom line is to imagine whether you would want to work on a project writing drivers for printers or on a project making the next Doom.”\n\nThat explains it all why you should work in Game Industry rather than anything else even if IT Companies pay better.\n\nStill thinking why work in Game Industry when IT Companies pay better??\n\nHaving said that, people working in Game Industry often go through tough times as well. Sometimes 17 hours a day. I’ve read somewhere about a wife writing a blog against EA how the manager of a certain EA studio almost ruined the life of her Husband by making him work day and night. Some companies even go bankrupt before even publishing a single game. Still, why work there? – Read again from atop!\n\nI myself belong to IT background, but, my heart is, and will always be with core game development. This is my view to clarify on what people think, misinterpret and misunderstand about the payment and comfort in Game Industry. At the end of the day, if you have no complaints over your job, consider yourself Lucky!","source":"_posts/Why-work-in-Game-Industry-when-IT-companies-pay-better.md","raw":"---\ntitle: Why work in Game Industry when IT companies pay better?\ndate: 2014-06-05\ntags: \n- Game development as career\n- thought\n- why game development\n- motivation\n- career\ncategory: Game Development\nupdated: 2017-01-09\n---\n\n# Why work in Game Industry when IT Companies pay better?\n\nA very interesting, and yet, disappointing question revolves me around by many friends, friends of friends, and strangers – “Why would I work in a Game Industry when IT companies are paying me better?“.\n\nBefore even starting this article, I would like to highlight the fact that Game Industry doesn’t consists of only Programmers and Testers. Artists create assets and they themselves are unavoidable and priceless assets.\n\nAnd then, there are many more people who are deeply associated to the game industry – Musicians, Production team, FX team, Design (not limited to UI) team, and QA people, and many more. So, speaking exclusively about programmers in context of the question about Game Industry will be somewhat biased, partial and incomplete. However, for the sake of specific discussion, I assume that this question was asked by a group of people belonging to Mainstream Programming in IT industry and thinking about Game Industry as an alternative.\n\nSo, coming back to the question – why work in a game industry when IT companies pay better?\n\n1. If you really **are** passionate about making things what you and others enjoy playing, you wouldn't ask this question at first point. If you are okay earning money through what-so-ever way, you may want to reconsider reading this blog further `:P`. IMHO, companies in Game Industries won’t hire you if you have just played a couple of games and think, “it’ll be cool to work there”. \n2. You must play at-least that much that it compels you to think, “How did they make that s***” or “I wish someday I will grab a game title in a local game store that has my code written on it“. If you are even getting close to what I am trying to say, then my friend, you would NEVER EVER ask this question.\n3. Another way of looking at this could be - It depends on how much you are ready to commit to yourself about making games. *High pays are not always the best rewards you can get out of your work.* Indie Game developers keep making games no matter what. They fail a hundred times. Sometimes the art is not good enough, sometimes, the gameplay sucks, or sometimes, some crazy a$$ guy decides to leave the team in middle and flies off. But, the next day, the guys get up and start coding again! \n4. And, if you end up in big gates like EA, Activision, Criterion Studios, UbiSoft, Zynga, etc, the pay is way cooler than other software engineering disciplines.\n5. Oh and lastly, you may start with small pay, grow gradually, and end up having a lavish salary and the joy in your heart of entertaining others.\n\nMarc Mencer says, ” there does seem to be a lower average salary for programmers in the game industry when compared with business programmers from equal positions of experience and education. If that is the case, why would anyone want to work for less money doing the same job?\n\nThe truth of the matter is that, while the skill of programming may be the same or similar, the jobs are completely different. On a game project, you have a good time working on a piece of entertainment. You also have more liberal hours and you don’t have to wear a suit to work. The bottom line is to imagine whether you would want to work on a project writing drivers for printers or on a project making the next Doom.”\n\nThat explains it all why you should work in Game Industry rather than anything else even if IT Companies pay better.\n\nStill thinking why work in Game Industry when IT Companies pay better??\n\nHaving said that, people working in Game Industry often go through tough times as well. Sometimes 17 hours a day. I’ve read somewhere about a wife writing a blog against EA how the manager of a certain EA studio almost ruined the life of her Husband by making him work day and night. Some companies even go bankrupt before even publishing a single game. Still, why work there? – Read again from atop!\n\nI myself belong to IT background, but, my heart is, and will always be with core game development. This is my view to clarify on what people think, misinterpret and misunderstand about the payment and comfort in Game Industry. At the end of the day, if you have no complaints over your job, consider yourself Lucky!","slug":"Why-work-in-Game-Industry-when-IT-companies-pay-better","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cixtbxhv1000btavzqifeht66","content":"<h1 id=\"Why-work-in-Game-Industry-when-IT-Companies-pay-better\"><a href=\"#Why-work-in-Game-Industry-when-IT-Companies-pay-better\" class=\"headerlink\" title=\"Why work in Game Industry when IT Companies pay better?\"></a>Why work in Game Industry when IT Companies pay better?</h1><p>A very interesting, and yet, disappointing question revolves me around by many friends, friends of friends, and strangers – “Why would I work in a Game Industry when IT companies are paying me better?“.</p>\n<p>Before even starting this article, I would like to highlight the fact that Game Industry doesn’t consists of only Programmers and Testers. Artists create assets and they themselves are unavoidable and priceless assets.</p>\n<p>And then, there are many more people who are deeply associated to the game industry – Musicians, Production team, FX team, Design (not limited to UI) team, and QA people, and many more. So, speaking exclusively about programmers in context of the question about Game Industry will be somewhat biased, partial and incomplete. However, for the sake of specific discussion, I assume that this question was asked by a group of people belonging to Mainstream Programming in IT industry and thinking about Game Industry as an alternative.</p>\n<p>So, coming back to the question – why work in a game industry when IT companies pay better?</p>\n<ol>\n<li>If you really <strong>are</strong> passionate about making things what you and others enjoy playing, you wouldn’t ask this question at first point. If you are okay earning money through what-so-ever way, you may want to reconsider reading this blog further <code>:P</code>. IMHO, companies in Game Industries won’t hire you if you have just played a couple of games and think, “it’ll be cool to work there”. </li>\n<li>You must play at-least that much that it compels you to think, “How did they make that s<em>*</em>” or “I wish someday I will grab a game title in a local game store that has my code written on it“. If you are even getting close to what I am trying to say, then my friend, you would NEVER EVER ask this question.</li>\n<li>Another way of looking at this could be - It depends on how much you are ready to commit to yourself about making games. <em>High pays are not always the best rewards you can get out of your work.</em> Indie Game developers keep making games no matter what. They fail a hundred times. Sometimes the art is not good enough, sometimes, the gameplay sucks, or sometimes, some crazy a$$ guy decides to leave the team in middle and flies off. But, the next day, the guys get up and start coding again! </li>\n<li>And, if you end up in big gates like EA, Activision, Criterion Studios, UbiSoft, Zynga, etc, the pay is way cooler than other software engineering disciplines.</li>\n<li>Oh and lastly, you may start with small pay, grow gradually, and end up having a lavish salary and the joy in your heart of entertaining others.</li>\n</ol>\n<p>Marc Mencer says, ” there does seem to be a lower average salary for programmers in the game industry when compared with business programmers from equal positions of experience and education. If that is the case, why would anyone want to work for less money doing the same job?</p>\n<p>The truth of the matter is that, while the skill of programming may be the same or similar, the jobs are completely different. On a game project, you have a good time working on a piece of entertainment. You also have more liberal hours and you don’t have to wear a suit to work. The bottom line is to imagine whether you would want to work on a project writing drivers for printers or on a project making the next Doom.”</p>\n<p>That explains it all why you should work in Game Industry rather than anything else even if IT Companies pay better.</p>\n<p>Still thinking why work in Game Industry when IT Companies pay better??</p>\n<p>Having said that, people working in Game Industry often go through tough times as well. Sometimes 17 hours a day. I’ve read somewhere about a wife writing a blog against EA how the manager of a certain EA studio almost ruined the life of her Husband by making him work day and night. Some companies even go bankrupt before even publishing a single game. Still, why work there? – Read again from atop!</p>\n<p>I myself belong to IT background, but, my heart is, and will always be with core game development. This is my view to clarify on what people think, misinterpret and misunderstand about the payment and comfort in Game Industry. At the end of the day, if you have no complaints over your job, consider yourself Lucky!</p>\n","excerpt":"","more":"<h1 id=\"Why-work-in-Game-Industry-when-IT-Companies-pay-better\"><a href=\"#Why-work-in-Game-Industry-when-IT-Companies-pay-better\" class=\"headerlink\" title=\"Why work in Game Industry when IT Companies pay better?\"></a>Why work in Game Industry when IT Companies pay better?</h1><p>A very interesting, and yet, disappointing question revolves me around by many friends, friends of friends, and strangers – “Why would I work in a Game Industry when IT companies are paying me better?“.</p>\n<p>Before even starting this article, I would like to highlight the fact that Game Industry doesn’t consists of only Programmers and Testers. Artists create assets and they themselves are unavoidable and priceless assets.</p>\n<p>And then, there are many more people who are deeply associated to the game industry – Musicians, Production team, FX team, Design (not limited to UI) team, and QA people, and many more. So, speaking exclusively about programmers in context of the question about Game Industry will be somewhat biased, partial and incomplete. However, for the sake of specific discussion, I assume that this question was asked by a group of people belonging to Mainstream Programming in IT industry and thinking about Game Industry as an alternative.</p>\n<p>So, coming back to the question – why work in a game industry when IT companies pay better?</p>\n<ol>\n<li>If you really <strong>are</strong> passionate about making things what you and others enjoy playing, you wouldn’t ask this question at first point. If you are okay earning money through what-so-ever way, you may want to reconsider reading this blog further <code>:P</code>. IMHO, companies in Game Industries won’t hire you if you have just played a couple of games and think, “it’ll be cool to work there”. </li>\n<li>You must play at-least that much that it compels you to think, “How did they make that s<em>*</em>” or “I wish someday I will grab a game title in a local game store that has my code written on it“. If you are even getting close to what I am trying to say, then my friend, you would NEVER EVER ask this question.</li>\n<li>Another way of looking at this could be - It depends on how much you are ready to commit to yourself about making games. <em>High pays are not always the best rewards you can get out of your work.</em> Indie Game developers keep making games no matter what. They fail a hundred times. Sometimes the art is not good enough, sometimes, the gameplay sucks, or sometimes, some crazy a$$ guy decides to leave the team in middle and flies off. But, the next day, the guys get up and start coding again! </li>\n<li>And, if you end up in big gates like EA, Activision, Criterion Studios, UbiSoft, Zynga, etc, the pay is way cooler than other software engineering disciplines.</li>\n<li>Oh and lastly, you may start with small pay, grow gradually, and end up having a lavish salary and the joy in your heart of entertaining others.</li>\n</ol>\n<p>Marc Mencer says, ” there does seem to be a lower average salary for programmers in the game industry when compared with business programmers from equal positions of experience and education. If that is the case, why would anyone want to work for less money doing the same job?</p>\n<p>The truth of the matter is that, while the skill of programming may be the same or similar, the jobs are completely different. On a game project, you have a good time working on a piece of entertainment. You also have more liberal hours and you don’t have to wear a suit to work. The bottom line is to imagine whether you would want to work on a project writing drivers for printers or on a project making the next Doom.”</p>\n<p>That explains it all why you should work in Game Industry rather than anything else even if IT Companies pay better.</p>\n<p>Still thinking why work in Game Industry when IT Companies pay better??</p>\n<p>Having said that, people working in Game Industry often go through tough times as well. Sometimes 17 hours a day. I’ve read somewhere about a wife writing a blog against EA how the manager of a certain EA studio almost ruined the life of her Husband by making him work day and night. Some companies even go bankrupt before even publishing a single game. Still, why work there? – Read again from atop!</p>\n<p>I myself belong to IT background, but, my heart is, and will always be with core game development. This is my view to clarify on what people think, misinterpret and misunderstand about the payment and comfort in Game Industry. At the end of the day, if you have no complaints over your job, consider yourself Lucky!</p>\n"},{"title":"Hello World","date":"2017-01-11T19:19:00.000Z","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_discarded/hello-world.md","raw":"title: Hello World\ntags: []\ncategories: []\ndate: 2017-01-12 00:49:00\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":0,"updated":"2017-01-11T19:22:51.800Z","_id":"cixtbxhv5000ftavz57r5piej","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\">Deployment</a></p>\n"},{"title":"_unity : Utility Library for Unity 3D","date":"2014-08-14T18:41:16.000Z","Category":"Game Development","_content":"\n# _unity : Utility Library for Unity 3D\n\nThis is my take on a utility library for Unity Engine. It has some GUI Scaling Utility Methods, some Debugging Methods, Array Utilities and some other cool stuff like finite state machine, generic singletons, Event Messaging, and etc. \n\nThis is an ongoing project which I’ll be updating over time.\n\n[_Unity Utility Library for Unity Game Engine](https://bitbucket.org/skipbits/_unity)\n\n\n## Usage\n1. Download from Github\n2. Compile with VS 2013\n3. Put dll in Plugins folder of Unity Project\n\n## Quick Setup\nGet the pre-compiled binary dll in bin directory of this repo and put it in plugins folder of your unity project.\n\n\n## DOCS\n\npublic static void l(string msg)\nprints a string to the debug console with current time and date and other info e.g. _.l(“Hello”);\n\npublic static void ExecOnce(Callback callback,ref bool limiter)\nExecutes a method only once inside all loop functions ( update, OnGUI, etc)\n\npublic static void GUISetup(float customWidth=1366f,float customHeight=768f)\nSets up GUI Scaling correctly. Call this at first line of each OnGUI. e.g. _.GUISetup(); e.g. _.GUISetup(800f,480f);\n\nFind more at the Bitbucket repo.\n\nFeel free to ask any questions regarding _unity as this is a very basic utility library for Unity 3D engine. Catch me on google @ +AbhishekDeb.\n\n\n","source":"_posts/unity-Utility-Library-for-Unity-3D.md","raw":"---\ntitle: '_unity : Utility Library for Unity 3D'\ndate: 2014-8-15 00:11:16\ntags: \n- debug\n- Github\n- gui scaling\n- library\n- shuffle\n- utility\n- finite state machine\n- generic singleton\n- REST client\n- rapid tools\n- rapid library\nCategory: Game Development\n---\n\n# _unity : Utility Library for Unity 3D\n\nThis is my take on a utility library for Unity Engine. It has some GUI Scaling Utility Methods, some Debugging Methods, Array Utilities and some other cool stuff like finite state machine, generic singletons, Event Messaging, and etc. \n\nThis is an ongoing project which I’ll be updating over time.\n\n[_Unity Utility Library for Unity Game Engine](https://bitbucket.org/skipbits/_unity)\n\n\n## Usage\n1. Download from Github\n2. Compile with VS 2013\n3. Put dll in Plugins folder of Unity Project\n\n## Quick Setup\nGet the pre-compiled binary dll in bin directory of this repo and put it in plugins folder of your unity project.\n\n\n## DOCS\n\npublic static void l(string msg)\nprints a string to the debug console with current time and date and other info e.g. _.l(“Hello”);\n\npublic static void ExecOnce(Callback callback,ref bool limiter)\nExecutes a method only once inside all loop functions ( update, OnGUI, etc)\n\npublic static void GUISetup(float customWidth=1366f,float customHeight=768f)\nSets up GUI Scaling correctly. Call this at first line of each OnGUI. e.g. _.GUISetup(); e.g. _.GUISetup(800f,480f);\n\nFind more at the Bitbucket repo.\n\nFeel free to ask any questions regarding _unity as this is a very basic utility library for Unity 3D engine. Catch me on google @ +AbhishekDeb.\n\n\n","slug":"unity-Utility-Library-for-Unity-3D","published":1,"updated":"2017-01-11T18:56:33.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cixtbxhv6000htavzmfdtcwk2","content":"<h1 id=\"unity-Utility-Library-for-Unity-3D\"><a href=\"#unity-Utility-Library-for-Unity-3D\" class=\"headerlink\" title=\"_unity : Utility Library for Unity 3D\"></a>_unity : Utility Library for Unity 3D</h1><p>This is my take on a utility library for Unity Engine. It has some GUI Scaling Utility Methods, some Debugging Methods, Array Utilities and some other cool stuff like finite state machine, generic singletons, Event Messaging, and etc. </p>\n<p>This is an ongoing project which I’ll be updating over time.</p>\n<p><a href=\"https://bitbucket.org/skipbits/_unity\" target=\"_blank\" rel=\"external\">_Unity Utility Library for Unity Game Engine</a></p>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><ol>\n<li>Download from Github</li>\n<li>Compile with VS 2013</li>\n<li>Put dll in Plugins folder of Unity Project</li>\n</ol>\n<h2 id=\"Quick-Setup\"><a href=\"#Quick-Setup\" class=\"headerlink\" title=\"Quick Setup\"></a>Quick Setup</h2><p>Get the pre-compiled binary dll in bin directory of this repo and put it in plugins folder of your unity project.</p>\n<h2 id=\"DOCS\"><a href=\"#DOCS\" class=\"headerlink\" title=\"DOCS\"></a>DOCS</h2><p>public static void l(string msg)<br>prints a string to the debug console with current time and date and other info e.g. _.l(“Hello”);</p>\n<p>public static void ExecOnce(Callback callback,ref bool limiter)<br>Executes a method only once inside all loop functions ( update, OnGUI, etc)</p>\n<p>public static void GUISetup(float customWidth=1366f,float customHeight=768f)<br>Sets up GUI Scaling correctly. Call this at first line of each OnGUI. e.g. <em>.GUISetup(); e.g. </em>.GUISetup(800f,480f);</p>\n<p>Find more at the Bitbucket repo.</p>\n<p>Feel free to ask any questions regarding _unity as this is a very basic utility library for Unity 3D engine. Catch me on google @ +AbhishekDeb.</p>\n","excerpt":"","more":"<h1 id=\"unity-Utility-Library-for-Unity-3D\"><a href=\"#unity-Utility-Library-for-Unity-3D\" class=\"headerlink\" title=\"_unity : Utility Library for Unity 3D\"></a>_unity : Utility Library for Unity 3D</h1><p>This is my take on a utility library for Unity Engine. It has some GUI Scaling Utility Methods, some Debugging Methods, Array Utilities and some other cool stuff like finite state machine, generic singletons, Event Messaging, and etc. </p>\n<p>This is an ongoing project which I’ll be updating over time.</p>\n<p><a href=\"https://bitbucket.org/skipbits/_unity\">_Unity Utility Library for Unity Game Engine</a></p>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><ol>\n<li>Download from Github</li>\n<li>Compile with VS 2013</li>\n<li>Put dll in Plugins folder of Unity Project</li>\n</ol>\n<h2 id=\"Quick-Setup\"><a href=\"#Quick-Setup\" class=\"headerlink\" title=\"Quick Setup\"></a>Quick Setup</h2><p>Get the pre-compiled binary dll in bin directory of this repo and put it in plugins folder of your unity project.</p>\n<h2 id=\"DOCS\"><a href=\"#DOCS\" class=\"headerlink\" title=\"DOCS\"></a>DOCS</h2><p>public static void l(string msg)<br>prints a string to the debug console with current time and date and other info e.g. _.l(“Hello”);</p>\n<p>public static void ExecOnce(Callback callback,ref bool limiter)<br>Executes a method only once inside all loop functions ( update, OnGUI, etc)</p>\n<p>public static void GUISetup(float customWidth=1366f,float customHeight=768f)<br>Sets up GUI Scaling correctly. Call this at first line of each OnGUI. e.g. <em>.GUISetup(); e.g. </em>.GUISetup(800f,480f);</p>\n<p>Find more at the Bitbucket repo.</p>\n<p>Feel free to ask any questions regarding _unity as this is a very basic utility library for Unity 3D engine. Catch me on google @ +AbhishekDeb.</p>\n"},{"title":"#GameDevStream – 01. Catch The Egg","author":"Abhishek Deb","date":"2015-03-27T19:23:00.000Z","_content":"# \\#GameDevStream – 01. Catch The Egg\nGameDevStream is a series of Live Video Streams of Indie Game Development. This is the first video of a casual game “Catch The Egg”. Use the arrow buttons to move the basket left or right and try to actually “catch the egg” (s) to score higher.\n\n`#GameDevStream`\n\n## Video 1: Catch The Egg\n\nSo, I have decided to start a new Youtube Playlist and upload my streams of Video Game Development, called #GameDevStream. Its basically for beginners and intermediates. Advanced Videos will follow. I am very new to this screen-cast things and so, thought of experimenting with it. The main goal of this initiative is to put a “feel” online how “Game Developers” actually code.\n\n## See the Video:\n\n{% youtube mGDrU8nd3WE %}\n\n \n\nThis is the first game development video of the series #GameDevStream. Its a 2 hour + Video of a simple game “Catch The Egg”. Of-course there are a LOTTTT of things that needs to be taken care of in the game development ( pooling, Managers, etc) but this is just to show how quickly you can make a game, and what feel goes into it. The Next Videos will contain more in-depth improvements (Delegates, Messaging System, Singletons, etc).\n\nThe [Source Code](BitBucket ) has been uploaded on BitBucket.\n\nFeel free to ask any questions and criticize to your satisfaction. Also, I am looking for other people who are interested in this project and want to share their experience with.\n\nThe Code is written on Unity 4 and may **NOT** work in Unity 5.\n\n`#GameDevStream`","source":"_posts/GameDevStream-–-01-Catch-The-Egg.md","raw":"title: '#GameDevStream – 01. Catch The Egg'\nauthor: Abhishek Deb\ntags:\n  - Game Development Stream\n  - '#GameDevStream'\n  - Game Development Tutorial\ncategories:\n  - Game Development\ndate: 2015-03-28 00:53:00\n---\n# \\#GameDevStream – 01. Catch The Egg\nGameDevStream is a series of Live Video Streams of Indie Game Development. This is the first video of a casual game “Catch The Egg”. Use the arrow buttons to move the basket left or right and try to actually “catch the egg” (s) to score higher.\n\n`#GameDevStream`\n\n## Video 1: Catch The Egg\n\nSo, I have decided to start a new Youtube Playlist and upload my streams of Video Game Development, called #GameDevStream. Its basically for beginners and intermediates. Advanced Videos will follow. I am very new to this screen-cast things and so, thought of experimenting with it. The main goal of this initiative is to put a “feel” online how “Game Developers” actually code.\n\n## See the Video:\n\n{% youtube mGDrU8nd3WE %}\n\n \n\nThis is the first game development video of the series #GameDevStream. Its a 2 hour + Video of a simple game “Catch The Egg”. Of-course there are a LOTTTT of things that needs to be taken care of in the game development ( pooling, Managers, etc) but this is just to show how quickly you can make a game, and what feel goes into it. The Next Videos will contain more in-depth improvements (Delegates, Messaging System, Singletons, etc).\n\nThe [Source Code](BitBucket ) has been uploaded on BitBucket.\n\nFeel free to ask any questions and criticize to your satisfaction. Also, I am looking for other people who are interested in this project and want to share their experience with.\n\nThe Code is written on Unity 4 and may **NOT** work in Unity 5.\n\n`#GameDevStream`","slug":"GameDevStream-–-01-Catch-The-Egg","published":1,"updated":"2017-01-11T19:26:45.000Z","_id":"cixtc3fhj002ttavzi45mu8ct","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"GameDevStream-–-01-Catch-The-Egg\"><a href=\"#GameDevStream-–-01-Catch-The-Egg\" class=\"headerlink\" title=\"#GameDevStream – 01. Catch The Egg\"></a>#GameDevStream – 01. Catch The Egg</h1><p>GameDevStream is a series of Live Video Streams of Indie Game Development. This is the first video of a casual game “Catch The Egg”. Use the arrow buttons to move the basket left or right and try to actually “catch the egg” (s) to score higher.</p>\n<p><code>#GameDevStream</code></p>\n<h2 id=\"Video-1-Catch-The-Egg\"><a href=\"#Video-1-Catch-The-Egg\" class=\"headerlink\" title=\"Video 1: Catch The Egg\"></a>Video 1: Catch The Egg</h2><p>So, I have decided to start a new Youtube Playlist and upload my streams of Video Game Development, called #GameDevStream. Its basically for beginners and intermediates. Advanced Videos will follow. I am very new to this screen-cast things and so, thought of experimenting with it. The main goal of this initiative is to put a “feel” online how “Game Developers” actually code.</p>\n<h2 id=\"See-the-Video\"><a href=\"#See-the-Video\" class=\"headerlink\" title=\"See the Video:\"></a>See the Video:</h2><div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/mGDrU8nd3WE\" frameborder=\"0\" allowfullscreen></iframe></div>\n<p>This is the first game development video of the series #GameDevStream. Its a 2 hour + Video of a simple game “Catch The Egg”. Of-course there are a LOTTTT of things that needs to be taken care of in the game development ( pooling, Managers, etc) but this is just to show how quickly you can make a game, and what feel goes into it. The Next Videos will contain more in-depth improvements (Delegates, Messaging System, Singletons, etc).</p>\n<p>The <a href=\"BitBucket\">Source Code</a> has been uploaded on BitBucket.</p>\n<p>Feel free to ask any questions and criticize to your satisfaction. Also, I am looking for other people who are interested in this project and want to share their experience with.</p>\n<p>The Code is written on Unity 4 and may <strong>NOT</strong> work in Unity 5.</p>\n<p><code>#GameDevStream</code></p>\n","excerpt":"","more":"<h1 id=\"GameDevStream-–-01-Catch-The-Egg\"><a href=\"#GameDevStream-–-01-Catch-The-Egg\" class=\"headerlink\" title=\"#GameDevStream – 01. Catch The Egg\"></a>#GameDevStream – 01. Catch The Egg</h1><p>GameDevStream is a series of Live Video Streams of Indie Game Development. This is the first video of a casual game “Catch The Egg”. Use the arrow buttons to move the basket left or right and try to actually “catch the egg” (s) to score higher.</p>\n<p><code>#GameDevStream</code></p>\n<h2 id=\"Video-1-Catch-The-Egg\"><a href=\"#Video-1-Catch-The-Egg\" class=\"headerlink\" title=\"Video 1: Catch The Egg\"></a>Video 1: Catch The Egg</h2><p>So, I have decided to start a new Youtube Playlist and upload my streams of Video Game Development, called #GameDevStream. Its basically for beginners and intermediates. Advanced Videos will follow. I am very new to this screen-cast things and so, thought of experimenting with it. The main goal of this initiative is to put a “feel” online how “Game Developers” actually code.</p>\n<h2 id=\"See-the-Video\"><a href=\"#See-the-Video\" class=\"headerlink\" title=\"See the Video:\"></a>See the Video:</h2><div class=\"video-container\"><iframe src=\"//www.youtube.com/embed/mGDrU8nd3WE\" frameborder=\"0\" allowfullscreen></iframe></div>\n<p>This is the first game development video of the series #GameDevStream. Its a 2 hour + Video of a simple game “Catch The Egg”. Of-course there are a LOTTTT of things that needs to be taken care of in the game development ( pooling, Managers, etc) but this is just to show how quickly you can make a game, and what feel goes into it. The Next Videos will contain more in-depth improvements (Delegates, Messaging System, Singletons, etc).</p>\n<p>The <a href=\"BitBucket\">Source Code</a> has been uploaded on BitBucket.</p>\n<p>Feel free to ask any questions and criticize to your satisfaction. Also, I am looking for other people who are interested in this project and want to share their experience with.</p>\n<p>The Code is written on Unity 4 and may <strong>NOT</strong> work in Unity 5.</p>\n<p><code>#GameDevStream</code></p>\n"}],"PostAsset":[{"_id":"source/_posts/Effective-Unity-Folder-Structure/Unity3d-Folder-Structure.png","slug":"Unity3d-Folder-Structure.png","post":"cixtbxhub0000tavz9tksadey","modified":0,"renderable":0},{"_id":"source/_posts/Game-Flow-Design-for-mobiles/What-a-Drag-Diagrams.jpg","slug":"What-a-Drag-Diagrams.jpg","post":"cixtbxhuf0001tavz6omiwalo","modified":0,"renderable":0}],"PostCategory":[{"post_id":"cixtbxhut0005tavzzidbr6h5","category_id":"cixtbxhuj0002tavzicjszn7a","_id":"cixtbxhv1000atavzf43iusbw"},{"post_id":"cixtbxhub0000tavz9tksadey","category_id":"cixtbxhuj0002tavzicjszn7a","_id":"cixtbxhv4000etavzpaw5uslt"},{"post_id":"cixtbxhuw0006tavzjujrops2","category_id":"cixtbxhuj0002tavzicjszn7a","_id":"cixtbxhv6000gtavzl89fm1th"},{"post_id":"cixtbxhuz0009tavzunxqdzhe","category_id":"cixtbxhuj0002tavzicjszn7a","_id":"cixtbxhv8000jtavzz6v2nxxv"},{"post_id":"cixtbxhuf0001tavz6omiwalo","category_id":"cixtbxhuj0002tavzicjszn7a","_id":"cixtbxhv9000ktavz8qggapd7"},{"post_id":"cixtbxhv1000btavzqifeht66","category_id":"cixtbxhuj0002tavzicjszn7a","_id":"cixtbxhv9000ltavzztjakx13"},{"post_id":"cixtbxhum0004tavzcp1wsv3r","category_id":"cixtbxhuj0002tavzicjszn7a","_id":"cixtbxhva000otavzgdvobc0t"},{"post_id":"cixtc3fhj002ttavzi45mu8ct","category_id":"cixtbxhuj0002tavzicjszn7a","_id":"cixtc4jri002vtavzj4hq55uw"}],"PostTag":[{"post_id":"cixtbxhub0000tavz9tksadey","tag_id":"cixtbxhul0003tavz9jcsb94h","_id":"cixtbxhva000ntavz701mc0qx"},{"post_id":"cixtbxhub0000tavz9tksadey","tag_id":"cixtbxhux0008tavzc5dxbyfq","_id":"cixtbxhvb000ptavznh9hga7b"},{"post_id":"cixtbxhub0000tavz9tksadey","tag_id":"cixtbxhv4000dtavz51bp5dvp","_id":"cixtbxhvc000rtavzmzpgtf5s"},{"post_id":"cixtbxhub0000tavz9tksadey","tag_id":"cixtbxhv8000itavz7d3ximw1","_id":"cixtbxhvd000stavzr1mh80a3"},{"post_id":"cixtbxhuf0001tavz6omiwalo","tag_id":"cixtbxhv9000mtavz6y5e5v1i","_id":"cixtbxhvh000vtavzqja8ny83"},{"post_id":"cixtbxhuf0001tavz6omiwalo","tag_id":"cixtbxhvc000qtavzd9kg8w7w","_id":"cixtbxhvi000wtavzqmq799gx"},{"post_id":"cixtbxhuf0001tavz6omiwalo","tag_id":"cixtbxhvd000ttavz43db5zd9","_id":"cixtbxhvj000ytavztd2suppz"},{"post_id":"cixtbxhum0004tavzcp1wsv3r","tag_id":"cixtbxhvh000utavzfnm1hph1","_id":"cixtbxhvk0011tavzmik3jpwu"},{"post_id":"cixtbxhum0004tavzcp1wsv3r","tag_id":"cixtbxhvj000xtavzqkxjvg5e","_id":"cixtbxhvk0012tavzvg4cwon1"},{"post_id":"cixtbxhum0004tavzcp1wsv3r","tag_id":"cixtbxhvj000ztavzggyt8206","_id":"cixtbxhvl0014tavzjm8mdqys"},{"post_id":"cixtbxhut0005tavzzidbr6h5","tag_id":"cixtbxhvk0010tavzr1bbar3e","_id":"cixtbxhvl0018tavzjxvzph3i"},{"post_id":"cixtbxhut0005tavzzidbr6h5","tag_id":"cixtbxhvk0013tavzymxipsyk","_id":"cixtbxhvl0019tavzl3qqlf50"},{"post_id":"cixtbxhut0005tavzzidbr6h5","tag_id":"cixtbxhvl0015tavzoqtaf0ok","_id":"cixtbxhvm001btavzq81n9pkv"},{"post_id":"cixtbxhut0005tavzzidbr6h5","tag_id":"cixtbxhvl0016tavzz07xbzkc","_id":"cixtbxhvm001ctavz9htxku27"},{"post_id":"cixtbxhuw0006tavzjujrops2","tag_id":"cixtbxhvl0017tavzk5tkludi","_id":"cixtbxhvm001gtavzbpt3r562"},{"post_id":"cixtbxhuw0006tavzjujrops2","tag_id":"cixtbxhvl001atavz4q99u6du","_id":"cixtbxhvm001htavz3lcic5qy"},{"post_id":"cixtbxhuw0006tavzjujrops2","tag_id":"cixtbxhvm001dtavz5giqng1q","_id":"cixtbxhvm001jtavz19i04fya"},{"post_id":"cixtbxhuw0006tavzjujrops2","tag_id":"cixtbxhvm001etavztpkfky3l","_id":"cixtbxhvn001ktavzlvi9oh2g"},{"post_id":"cixtbxhuz0009tavzunxqdzhe","tag_id":"cixtbxhvm001ftavzr7a5iblx","_id":"cixtbxhvo001rtavz8dqysrp2"},{"post_id":"cixtbxhuz0009tavzunxqdzhe","tag_id":"cixtbxhvm001itavzzu49xhcw","_id":"cixtbxhvo001stavzd5ppe7m9"},{"post_id":"cixtbxhuz0009tavzunxqdzhe","tag_id":"cixtbxhvn001ltavzkszrgy7w","_id":"cixtbxhvp001utavz1g9jlgg2"},{"post_id":"cixtbxhuz0009tavzunxqdzhe","tag_id":"cixtbxhvn001mtavzfxub8hnm","_id":"cixtbxhvp001vtavz8pi1tivt"},{"post_id":"cixtbxhuz0009tavzunxqdzhe","tag_id":"cixtbxhvn001ntavzjwuqqeok","_id":"cixtbxhvp001xtavz7r7rxony"},{"post_id":"cixtbxhuz0009tavzunxqdzhe","tag_id":"cixtbxhvn001otavzohxn7n0f","_id":"cixtbxhvp001ytavz4awmxugz"},{"post_id":"cixtbxhuz0009tavzunxqdzhe","tag_id":"cixtbxhvn001ptavzzju1r4kc","_id":"cixtbxhvp0020tavz1g518zb9"},{"post_id":"cixtbxhv1000btavzqifeht66","tag_id":"cixtbxhvn001qtavzm7gm5vwb","_id":"cixtbxhvt0023tavznl1x6n81"},{"post_id":"cixtbxhv1000btavzqifeht66","tag_id":"cixtbxhvo001ttavzsh4laqpj","_id":"cixtbxhvt0024tavzkm7tlyi5"},{"post_id":"cixtbxhv1000btavzqifeht66","tag_id":"cixtbxhvp001wtavz8f8zomnf","_id":"cixtbxhvt0026tavzpn8t9r0x"},{"post_id":"cixtbxhv1000btavzqifeht66","tag_id":"cixtbxhvp001ztavzmmw2jjyj","_id":"cixtbxhvt0027tavzcasswsyg"},{"post_id":"cixtbxhv1000btavzqifeht66","tag_id":"cixtbxhvr0021tavzt65lndip","_id":"cixtbxhvu0029tavzfxj81n7w"},{"post_id":"cixtbxhv6000htavzmfdtcwk2","tag_id":"cixtbxhvr0022tavzl1s631tf","_id":"cixtbxhvw002itavzznx1lt7a"},{"post_id":"cixtbxhv6000htavzmfdtcwk2","tag_id":"cixtbxhvt0025tavz4fzmx44g","_id":"cixtbxhvx002jtavz635gjgo7"},{"post_id":"cixtbxhv6000htavzmfdtcwk2","tag_id":"cixtbxhvt0028tavznbucpux0","_id":"cixtbxhvx002ktavz845w04iu"},{"post_id":"cixtbxhv6000htavzmfdtcwk2","tag_id":"cixtbxhvu002atavzhzxonwm2","_id":"cixtbxhvx002ltavzq5h32j7s"},{"post_id":"cixtbxhv6000htavzmfdtcwk2","tag_id":"cixtbxhvu002btavzqtxdx64q","_id":"cixtbxhvx002mtavzb4e5xpj6"},{"post_id":"cixtbxhv6000htavzmfdtcwk2","tag_id":"cixtbxhvu002ctavzaocy1oqy","_id":"cixtbxhvx002ntavzixusiwp6"},{"post_id":"cixtbxhv6000htavzmfdtcwk2","tag_id":"cixtbxhvu002dtavzpv9symax","_id":"cixtbxhvx002otavzu5v6b81v"},{"post_id":"cixtbxhv6000htavzmfdtcwk2","tag_id":"cixtbxhvv002etavzuwy31cml","_id":"cixtbxhvx002ptavzjr89zsue"},{"post_id":"cixtbxhv6000htavzmfdtcwk2","tag_id":"cixtbxhvv002ftavz1a6b1wbe","_id":"cixtbxhvx002qtavzpyecf7o1"},{"post_id":"cixtbxhv6000htavzmfdtcwk2","tag_id":"cixtbxhvv002gtavzl01trucr","_id":"cixtbxhvx002rtavzz04lwx80"},{"post_id":"cixtbxhv6000htavzmfdtcwk2","tag_id":"cixtbxhvv002htavz2iufmn7l","_id":"cixtbxhvx002stavzmiir08bc"},{"post_id":"cixtc3fhj002ttavzi45mu8ct","tag_id":"cixtc4jrh002utavzuu18uxmo","_id":"cixtc4jri002xtavzf3na6x8b"},{"post_id":"cixtc3fhj002ttavzi45mu8ct","tag_id":"cixtbxhvj000xtavzqkxjvg5e","_id":"cixtc4jri002ytavzzmplvnhs"},{"post_id":"cixtc3fhj002ttavzi45mu8ct","tag_id":"cixtc4jri002wtavzlsno2kum","_id":"cixtc4jrj002ztavzkt3v83it"}],"Tag":[{"name":"Folder Structure","_id":"cixtbxhul0003tavz9jcsb94h"},{"name":"Game Workflow","_id":"cixtbxhux0008tavzc5dxbyfq"},{"name":"Unity","_id":"cixtbxhv4000dtavz51bp5dvp"},{"name":"Abhishek","_id":"cixtbxhv8000itavz7d3ximw1"},{"name":"Architecture","_id":"cixtbxhv9000mtavz6y5e5v1i"},{"name":"Game Flow Diagram","_id":"cixtbxhvc000qtavzd9kg8w7w"},{"name":"Mobile Workflow","_id":"cixtbxhvd000ttavz43db5zd9"},{"name":"GameDevStream","_id":"cixtbxhvh000utavzfnm1hph1"},{"name":"Game Development Stream","_id":"cixtbxhvj000xtavzqkxjvg5e"},{"name":"Tutorial","_id":"cixtbxhvj000ztavzggyt8206"},{"name":"Career","_id":"cixtbxhvk0010tavzr1bbar3e"},{"name":"career in game development","_id":"cixtbxhvk0013tavzymxipsyk"},{"name":"start","_id":"cixtbxhvl0015tavzoqtaf0ok"},{"name":"bootstraping","_id":"cixtbxhvl0016tavzz07xbzkc"},{"name":"plugins","_id":"cixtbxhvl0017tavzk5tkludi"},{"name":"scripts","_id":"cixtbxhvl001atavz4q99u6du"},{"name":"tools","_id":"cixtbxhvm001dtavz5giqng1q"},{"name":"tricks","_id":"cixtbxhvm001etavztpkfky3l"},{"name":"movement","_id":"cixtbxhvm001ftavzr7a5iblx"},{"name":"transform","_id":"cixtbxhvm001itavzzu49xhcw"},{"name":"unity3d","_id":"cixtbxhvn001ltavzkszrgy7w"},{"name":"unity","_id":"cixtbxhvn001mtavzfxub8hnm"},{"name":"physics","_id":"cixtbxhvn001ntavzjwuqqeok"},{"name":"rigidbody","_id":"cixtbxhvn001otavzohxn7n0f"},{"name":"C#","_id":"cixtbxhvn001ptavzzju1r4kc"},{"name":"Game development as career","_id":"cixtbxhvn001qtavzm7gm5vwb"},{"name":"thought","_id":"cixtbxhvo001ttavzsh4laqpj"},{"name":"why game development","_id":"cixtbxhvp001wtavz8f8zomnf"},{"name":"motivation","_id":"cixtbxhvp001ztavzmmw2jjyj"},{"name":"career","_id":"cixtbxhvr0021tavzt65lndip"},{"name":"debug","_id":"cixtbxhvr0022tavzl1s631tf"},{"name":"Github","_id":"cixtbxhvt0025tavz4fzmx44g"},{"name":"gui scaling","_id":"cixtbxhvt0028tavznbucpux0"},{"name":"library","_id":"cixtbxhvu002atavzhzxonwm2"},{"name":"shuffle","_id":"cixtbxhvu002btavzqtxdx64q"},{"name":"utility","_id":"cixtbxhvu002ctavzaocy1oqy"},{"name":"finite state machine","_id":"cixtbxhvu002dtavzpv9symax"},{"name":"generic singleton","_id":"cixtbxhvv002etavzuwy31cml"},{"name":"REST client","_id":"cixtbxhvv002ftavz1a6b1wbe"},{"name":"rapid tools","_id":"cixtbxhvv002gtavzl01trucr"},{"name":"rapid library","_id":"cixtbxhvv002htavz2iufmn7l"},{"name":"#GameDevStream","_id":"cixtc4jrh002utavzuu18uxmo"},{"name":"Game Development Tutorial","_id":"cixtc4jri002wtavzlsno2kum"}]}}